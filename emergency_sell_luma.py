#!/usr/bin/env python3
"""
–≠–ö–°–¢–†–ï–ù–ù–ê–Ø –ü–†–û–î–ê–ñ–ê LUMAUSDT!
–°—Ä–æ—á–Ω–æ –ø—Ä–æ–¥–∞–µ–º –∫—É–ø–ª–µ–Ω–Ω—ã–π –∞–ª—å—Ç –Ω–∞ $50
"""

import sys
import logging
from mex_api import MexAPI

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def emergency_sell_luma():
    """–≠–ö–°–¢–†–ï–ù–ù–ê–Ø –ü–†–û–î–ê–ñ–ê LUMAUSDT"""
    
    print("üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –ü–†–û–î–ê–ñ–ê LUMAUSDT!")
    print("=" * 50)
    
    try:
        # –°–æ–∑–¥–∞–µ–º API
        api = MexAPI()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å LUMA
        account_info = api.get_account_info()
        luma_balance = 0.0
        
        for balance in account_info.get('balances', []):
            if balance['asset'] == 'LUMA':
                luma_balance = float(balance['free'])
                break
        
        if luma_balance <= 0:
            print("‚ùå LUMA –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–ª–∞–Ω—Å–µ")
            return
        
        print(f"üí∞ –ù–∞–π–¥–µ–Ω –±–∞–ª–∞–Ω—Å LUMA: {luma_balance}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É
        ticker = api.get_ticker_price('LUMAUSDT')
        if not ticker or 'price' not in ticker:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É LUMA")
            return
        
        current_price = float(ticker['price'])
        print(f"üìä –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ LUMA: ${current_price}")
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
        estimated_value = luma_balance * current_price
        print(f"üíµ –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${estimated_value:.2f}")
        
        # –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –ü–†–û–î–ê–ñ–ò
        confirm = input(f"\nüö® –ü–†–û–î–ê–¢–¨ {luma_balance} LUMA –ø–æ —Ä—ã–Ω–æ—á–Ω–æ–π —Ü–µ–Ω–µ? (yes/no): ")
        
        if confirm.lower() != 'yes':
            print("‚ùå –ü—Ä–æ–¥–∞–∂–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
            return
        
        print("üî• –í–´–ü–û–õ–ù–Ø–ï–ú –≠–ö–°–¢–†–ï–ù–ù–£–Æ –ü–†–û–î–ê–ñ–£...")
        
        # –ü—Ä–æ–¥–∞–µ–º –í–°–ï LUMA –ø–æ —Ä—ã–Ω–æ—á–Ω–æ–π —Ü–µ–Ω–µ
        order = api.place_order(
            symbol='LUMAUSDT',
            side='SELL',
            quantity=luma_balance
        )
        
        if order and 'orderId' in order:
            print(f"‚úÖ LUMA –ü–†–û–î–ê–ù –£–°–ü–ï–®–ù–û!")
            print(f"üÜî –û—Ä–¥–µ—Ä: {order['orderId']}")
            print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {luma_balance}")
            print(f"üí∞ –¶–µ–Ω–∞: ~${current_price}")
            print(f"üíµ –ü—Ä–∏–º–µ—Ä–Ω–∞—è –≤—ã—Ä—É—á–∫–∞: ${estimated_value:.2f}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å
            new_account = api.get_account_info()
            for balance in new_account.get('balances', []):
                if balance['asset'] == 'USDT':
                    usdt_balance = float(balance['free'])
                    print(f"üíµ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å USDT: ${usdt_balance:.2f}")
                    break
                    
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–¥–∞–∂–∏: {order}")
            
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ø—Ä–æ–¥–∞–∂–∏: {e}")

def check_luma_balance():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å LUMA"""
    try:
        api = MexAPI()
        account_info = api.get_account_info()
        
        print("üîç –ü–†–û–í–ï–†–ö–ê –ë–ê–õ–ê–ù–°–ê LUMA:")
        print("=" * 30)
        
        for balance in account_info.get('balances', []):
            if balance['asset'] == 'LUMA':
                free = float(balance['free'])
                locked = float(balance['locked'])
                total = free + locked
                
                print(f"üí∞ LUMA:")
                print(f"   –°–≤–æ–±–æ–¥–Ω–æ: {free}")
                print(f"   –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: {locked}")
                print(f"   –í—Å–µ–≥–æ: {total}")
                
                if total > 0:
                    # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É
                    ticker = api.get_ticker_price('LUMAUSDT')
                    if ticker and 'price' in ticker:
                        price = float(ticker['price'])
                        value = total * price
                        print(f"   –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${price}")
                        print(f"   –°—Ç–æ–∏–º–æ—Å—Ç—å: ${value:.2f}")
                
                return
        
        print("‚ùå LUMA –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–ª–∞–Ω—Å–µ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üö® –≠–ö–°–¢–†–ï–ù–ù–´–ô –°–ö–†–ò–ü–¢ –ü–†–û–î–ê–ñ–ò LUMAUSDT")
    print("=" * 50)
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å LUMA")
        print("2. üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –ü–†–û–î–ê–ñ–ê LUMA")
        print("3. ‚ùå –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3): ")
        
        if choice == '1':
            check_luma_balance()
        elif choice == '2':
            emergency_sell_luma()
        elif choice == '3':
            print("üëã –í—ã—Ö–æ–¥")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

if __name__ == "__main__":
    main() 