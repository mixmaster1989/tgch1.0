#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —Ñ—å—é—á–µ—Ä—Å–Ω–æ–≥–æ —Å—á–µ—Ç–∞ MEXC
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from mex_api import MexAPI
from api.futures_api import FuturesAPI
import json

def test_futures_balance():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ—å—é—á–µ—Ä—Å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ—å—é—á–µ—Ä—Å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞...")
    
    try:
        api = MexAPI()
        fapi = FuturesAPI()
        
        # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ—å—é—á–µ—Ä—Å–Ω–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ
        print("\nüìä –¢–µ—Å—Ç 1: get_futures_account_info()")
        futures_info = api.get_futures_account_info()
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {json.dumps(futures_info, indent=2, ensure_ascii=False)}")
        
        # –¢–µ—Å—Ç 2: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
        print("\nüìä –¢–µ—Å—Ç 2: get_futures_balance()")
        futures_balance = api.get_futures_balance()
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {json.dumps(futures_balance, indent=2, ensure_ascii=False)}")
        
        # –¢–µ—Å—Ç 3: –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç FuturesAPI
        print("\nüìä –¢–µ—Å—Ç 3: FuturesAPI.get_account_asset()")
        futures_asset = fapi.get_account_asset()
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {json.dumps(futures_asset, indent=2, ensure_ascii=False)}")
        
        print("\nüìä –¢–µ—Å—Ç 4: FuturesAPI.get_account_info()")
        futures_info2 = fapi.get_account_info()
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {json.dumps(futures_info2, indent=2, ensure_ascii=False)}")
        
        # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        print("\nüîç –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
        
        if 'error' in futures_info:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ get_futures_account_info: {futures_info['error']}")
        else:
            print("‚úÖ get_futures_account_info –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            
        if 'error' in futures_balance:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ get_futures_balance: {futures_balance['error']}")
        else:
            print("‚úÖ get_futures_balance –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            
        # –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á—å –±–∞–ª–∞–Ω—Å –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        if 'data' in futures_info:
            print(f"\nüí∞ –î–∞–Ω–Ω—ã–µ —Ñ—å—é—á–µ—Ä—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞: {futures_info['data']}")
        elif 'assets' in futures_info:
            print(f"\nüí∞ –ê–∫—Ç–∏–≤—ã —Ñ—å—é—á–µ—Ä—Å–Ω–æ–≥–æ —Å—á–µ—Ç–∞: {futures_info['assets']}")
        elif 'balance' in futures_info:
            print(f"\nüí∞ –ë–∞–ª–∞–Ω—Å —Ñ—å—é—á–µ—Ä—Å–Ω–æ–≥–æ —Å—á–µ—Ç–∞: {futures_info['balance']}")
            
        if 'data' in futures_balance:
            print(f"\nüí∞ –î–∞–Ω–Ω—ã–µ –±–∞–ª–∞–Ω—Å–∞: {futures_balance['data']}")
        elif 'assets' in futures_balance:
            print(f"\nüí∞ –ê–∫—Ç–∏–≤—ã: {futures_balance['assets']}")
        elif 'balance' in futures_balance:
            print(f"\nüí∞ –ë–∞–ª–∞–Ω—Å: {futures_balance['balance']}")
            
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_futures_balance()
