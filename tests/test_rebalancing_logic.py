#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏
"""

from balance_monitor import BalanceMonitor
import asyncio

async def test_rebalancing():
    monitor = BalanceMonitor()
    
    print("üß™ –¢–ï–°–¢ –õ–û–ì–ò–ö–ò –†–ï–ë–ê–õ–ê–ù–°–ò–†–û–í–ö–ò")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
    allocation = monitor.get_current_portfolio_allocation()
    needs_rebalancing = monitor.needs_rebalancing(allocation)
    
    print(f"üìä –¢–µ–∫—É—â–µ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:")
    print(f"   BTC: {allocation.get('btc_percent', 0):.1f}% (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 60%)")
    print(f"   ETH: {allocation.get('eth_percent', 0):.1f}% (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 40%)")
    print(f"   –ù—É–∂–Ω–∞ —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞: {needs_rebalancing}")
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å USDC
    usdc_balance = monitor.get_usdc_balance()
    print(f"\nüí∞ –î–æ—Å—Ç—É–ø–Ω–æ USDC: ${usdc_balance:.2f}")
    
    if usdc_balance >= monitor.min_balance_threshold:
        print(f"\nüéØ –¢–ï–°–¢–ò–†–£–ï–ú –ü–õ–ê–ù –ü–û–ö–£–ü–ö–ò:")
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–ª–∞–Ω –ø–æ–∫—É–ø–∫–∏
        purchase_plan = monitor.calculate_purchase_amounts(usdc_balance, 'USDC')
        
        if purchase_plan:
            print(f"   –ü–ª–∞–Ω –ø–æ–∫—É–ø–∫–∏:")
            for symbol, data in purchase_plan.items():
                print(f"   - {symbol}: ${data['amount']:.2f} ({data['quantity']:.6f})")
        else:
            print(f"   ‚ùå –ü–ª–∞–Ω –ø–æ–∫—É–ø–∫–∏ –ø—É—Å—Ç–æ–π!")
    else:
        print(f"\n‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ USDC –¥–ª—è –ø–æ–∫—É–ø–∫–∏ (–Ω—É–∂–Ω–æ ${monitor.min_balance_threshold})")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏
    btc_percent = allocation.get('btc_percent', 0)
    eth_percent = allocation.get('eth_percent', 0)
    
    print(f"\nüîç –ê–ù–ê–õ–ò–ó –õ–û–ì–ò–ö–ò:")
    if btc_percent > 60:
        print(f"   ‚úÖ BTC —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ ({btc_percent:.1f}% > 60%)")
        print(f"   üéØ –°–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –∫—É–ø–∏—Ç—å –¢–û–õ–¨–ö–û ETH")
    elif eth_percent > 40:
        print(f"   ‚úÖ ETH —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ ({eth_percent:.1f}% > 40%)")
        print(f"   üéØ –°–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –∫—É–ø–∏—Ç—å –¢–û–õ–¨–ö–û BTC")
    else:
        print(f"   ‚úÖ –û–±–∞ –∞–∫—Ç–∏–≤–∞ –º–µ–Ω—å—à–µ –Ω–æ—Ä–º—ã")
        print(f"   üéØ –°–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –∫—É–ø–∏—Ç—å –æ–±–∞ –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ")

if __name__ == "__main__":
    asyncio.run(test_rebalancing()) 