#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ USDC –ø–∞—Ä –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
"""

from mex_api import MexAPI
import json

def main():
    api = MexAPI()
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ USDC –ø–∞—Ä –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏...")
    
    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ USDC –≤ –±–∞–ª–∞–Ω—Å–µ
        print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ USDC:")
        account_info = api.get_account_info()
        usdc_balance = 0
        usdt_balance = 0
        
        for balance in account_info.get('balances', []):
            if balance['asset'] == 'USDC':
                usdc_balance = float(balance['free'])
                print(f"USDC –±–∞–ª–∞–Ω—Å: {usdc_balance}")
            elif balance['asset'] == 'USDT':
                usdt_balance = float(balance['free'])
                print(f"USDT –±–∞–ª–∞–Ω—Å: {usdt_balance}")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–Ω—ã USDC –ø–∞—Ä
        usdc_pairs = ['BTCUSDC', 'ETHUSDC', 'BNBUSDC', 'ADAUSDC']
        print(f"\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω USDC –ø–∞—Ä:")
        for pair in usdc_pairs:
            try:
                price_info = api.get_ticker_price(pair)
                print(f"{pair}: {price_info}")
            except Exception as e:
                print(f"{pair}: –û—à–∏–±–∫–∞ - {e}")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–∫–∞–Ω—ã USDC –ø–∞—Ä
        print(f"\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–∫–∞–Ω–æ–≤ USDC –ø–∞—Ä:")
        for pair in usdc_pairs:
            try:
                depth_info = api.get_depth(pair, 5)
                print(f"{pair} —Å—Ç–∞–∫–∞–Ω: {len(depth_info.get('bids', []))} bids, {len(depth_info.get('asks', []))} asks")
            except Exception as e:
                print(f"{pair} —Å—Ç–∞–∫–∞–Ω: –û—à–∏–±–∫–∞ - {e}")
        
        # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –æ—Ä–¥–µ—Ä–æ–≤ –≤ USDC –ø–∞—Ä–∞—Ö
        print(f"\n4. –¢–µ—Å—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ—Ä–¥–µ—Ä–æ–≤ –≤ USDC –ø–∞—Ä–∞—Ö:")
        for pair in usdc_pairs:
            try:
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É
                price_info = api.get_ticker_price(pair)
                if 'price' in price_info:
                    current_price = float(price_info['price'])
                    # –†–∞–∑–º–µ—â–∞–µ–º –æ—Ä–¥–µ—Ä —Å —Ü–µ–Ω–æ–π –Ω–∏–∂–µ —Ä—ã–Ω–æ—á–Ω–æ–π
                    test_price = current_price * 0.9  # 90% –æ—Ç —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω—ã
                    test_quantity = 0.001  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                    
                    test_order = api.place_order(
                        symbol=pair,
                        side='BUY',
                        quantity=test_quantity,
                        price=test_price
                    )
                    print(f"{pair}: {test_order}")
                else:
                    print(f"{pair}: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É")
            except Exception as e:
                print(f"{pair}: –û—à–∏–±–∫–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ—Ä–¥–µ—Ä–∞ - {e}")
        
        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ USDT –≤ USDC
        print(f"\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ USDT -> USDC:")
        if usdt_balance > 0:
            try:
                # –ü—ã—Ç–∞–µ–º—Å—è –∫—É–ø–∏—Ç—å USDC –∑–∞ USDT
                usdt_usdc_order = api.place_order(
                    symbol='USDCUSDT',  # –ü–∞—Ä–∞ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
                    side='BUY',
                    quantity=1.0,  # –ü–æ–∫—É–ø–∞–µ–º 1 USDC
                    price=1.0  # –ü–æ —Ü–µ–Ω–µ 1:1
                )
                print(f"USDT -> USDC –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: {usdt_usdc_order}")
            except Exception as e:
                print(f"USDT -> USDC –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: –û—à–∏–±–∫–∞ - {e}")
        else:
            print("–ù–µ—Ç USDT –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏")
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main() 