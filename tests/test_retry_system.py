#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–µ—Ç—Ä–∞–µ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è
"""

import asyncio
import logging
from datetime import datetime
from market_scanner import MarketScanner

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def test_retry_system():
    """–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–µ—Ç—Ä–∞–µ–≤"""
    try:
        print("üîÑ –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –†–ï–¢–†–ê–ï–í")
        print("=" * 60)
        print(f"–í—Ä–µ–º—è: {datetime.now()}")
        print()
        
        # –°–æ–∑–¥–∞–µ–º —Å–∫–∞–Ω–µ—Ä
        scanner = MarketScanner()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ –ø—Ä–æ–±–ª–µ–º–Ω–æ–π –º–æ–Ω–µ—Ç–µ
        test_symbol = "BERAUSDT"  # –¢–∞ –∂–µ –º–æ–Ω–µ—Ç–∞ —á—Ç–æ –≤ –æ—à–∏–±–∫–µ
        test_amount = 6.68  # –¢–∞ –∂–µ —Å—É–º–º–∞
        
        print(f"üß™ –¢–ï–°–¢–ò–†–£–ï–ú: {test_symbol}")
        print(f"üí∞ –°—É–º–º–∞: ${test_amount}")
        print()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å
        test_opportunity = {
            'symbol': test_symbol,
            'score': 4,
            'rsi': 50.0,
            'reasons': ['–≤—ã—Å–æ–∫–∏–π_–æ–±—ä–µ–º', 'bb_–Ω–∏–∂–Ω—è—è']
        }
        
        print("üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∫—É–ø–∫—É —Å —Ä–µ—Ç—Ä–∞—è–º–∏...")
        print("üì± –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram")
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É —Å —Ä–µ—Ç—Ä–∞—è–º–∏
        result = await scanner.execute_purchase(test_symbol, test_amount, test_opportunity)
        
        if result['success']:
            print(f"‚úÖ –ü–û–ö–£–ü–ö–ê –£–°–ü–ï–®–ù–ê!")
            print(f"   –û—Ä–¥–µ—Ä ID: {result['order_id']}")
            print(f"   –ú–µ—Ç–æ–¥: {result['method']}")
            print(f"   –ü–æ–ø—ã—Ç–∫–∞: {result['attempt']}/6")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {result['quantity']}")
            print(f"   –¶–µ–Ω–∞: ${result['price']}")
        else:
            print(f"‚ùå –ü–û–ö–£–ü–ö–ê –ù–ï –£–î–ê–õ–ê–°–¨:")
            print(f"   {result['error']}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_retry_system()) 