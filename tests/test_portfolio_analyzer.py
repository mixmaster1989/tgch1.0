#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è MEXCAITRADE
"""

import asyncio
from portfolio_analyzer import PortfolioAnalyzer

def test_portfolio_analyzer():
    """–¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è"""
    print("üß™ –¢–ï–°–¢ –ê–ù–ê–õ–ò–ó–ê–¢–û–†–ê –ü–û–†–¢–§–ï–õ–Ø")
    print("=" * 50)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
        analyzer = PortfolioAnalyzer()
        print("‚úÖ –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
        print("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–∞...")
        account_data = analyzer.get_account_full_info()
        
        if account_data:
            print("‚úÖ –î–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
            account_info = account_data.get('account_info', {})
            portfolio_pnl = account_data.get('portfolio_pnl', {})
            open_orders = account_data.get('open_orders', [])
            
            print(f"üìã –ë–∞–ª–∞–Ω—Å–æ–≤: {len(account_info.get('balances', []))}")
            print(f"üìà –ü–æ–∑–∏—Ü–∏–π: {portfolio_pnl.get('total_positions', 0)}")
            print(f"üìã –û—Ç–∫—Ä—ã—Ç—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤: {len(open_orders)}")
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
            print("üìù –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞...")
            report = analyzer.format_portfolio_report(account_data)
            
            if report and len(report) > 100:
                print("‚úÖ –û—Ç—á–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω")
                print(f"üìÑ –î–ª–∏–Ω–∞ –æ—Ç—á–µ—Ç–∞: {len(report)} —Å–∏–º–≤–æ–ª–æ–≤")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤
                print("\nüìã –ü–†–ï–í–¨–Æ –û–¢–ß–ï–¢–ê:")
                print("-" * 50)
                print(report[:500] + "..." if len(report) > 500 else report)
                print("-" * 50)
                
                # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –æ—Ç–ø—Ä–∞–≤–∫–µ
                response = input("\n‚ùì –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç –≤ Telegram? (y/n): ")
                if response.lower() == 'y':
                    print("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞...")
                    success = analyzer.send_portfolio_report()
                    if success:
                        print("‚úÖ –û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
                    else:
                        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏")
                else:
                    print("‚è≠Ô∏è –û—Ç—á–µ—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_portfolio_analyzer() 