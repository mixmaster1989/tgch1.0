#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤—ã—Ö —Ç–∞–π–º–∏–Ω–≥–æ–≤ –æ—Ç—á–µ—Ç–æ–≤
"""

import logging
from datetime import datetime
from market_scanner import MarketScanner
from config import PNL_MONITOR_CONFIG

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def test_new_timings():
    """–¢–µ—Å—Ç –Ω–æ–≤—ã—Ö —Ç–∞–π–º–∏–Ω–≥–æ–≤ –æ—Ç—á–µ—Ç–æ–≤"""
    try:
        print("‚è∞ –¢–ï–°–¢ –ù–û–í–´–• –¢–ê–ô–ú–ò–ù–ì–û–í –û–¢–ß–ï–¢–û–í")
        print("=" * 60)
        print(f"–í—Ä–µ–º—è: {datetime.now()}")
        print()
        
        # –°–æ–∑–¥–∞–µ–º —Å–∫–∞–Ω–µ—Ä
        scanner = MarketScanner()
        
        print("üìä –ù–û–í–´–ï –¢–ê–ô–ú–ò–ù–ì–ò:")
        print("-" * 30)
        
        # –°–∫–∞–Ω–µ—Ä —Ä—ã–Ω–∫–∞
        scan_interval_minutes = scanner.scan_interval / 60
        print(f"üîç –°–∫–∞–Ω–µ—Ä —Ä—ã–Ω–∫–∞:")
        print(f"   –ò–Ω—Ç–µ—Ä–≤–∞–ª: {scanner.scan_interval} —Å–µ–∫ ({scan_interval_minutes:.0f} –º–∏–Ω)")
        print(f"   –û—Ç—á–µ—Ç—ã: –∫–∞–∂–¥—ã–µ {scan_interval_minutes:.0f} –º–∏–Ω—É—Ç")
        print()
        
        # PnL –º–æ–Ω–∏—Ç–æ—Ä
        pnl_check_interval = PNL_MONITOR_CONFIG['check_interval']
        pnl_notification_interval = PNL_MONITOR_CONFIG['notification_interval']
        pnl_check_minutes = pnl_check_interval / 60
        pnl_notification_minutes = pnl_notification_interval / 60
        
        print(f"üìà PnL –º–æ–Ω–∏—Ç–æ—Ä:")
        print(f"   –ü—Ä–æ–≤–µ—Ä–∫–∞: {pnl_check_interval} —Å–µ–∫ ({pnl_check_minutes:.0f} –º–∏–Ω)")
        print(f"   –û—Ç—á–µ—Ç—ã: {pnl_notification_interval} —Å–µ–∫ ({pnl_notification_minutes:.0f} –º–∏–Ω)")
        print()
        
        print("‚úÖ –ò–ó–ú–ï–ù–ï–ù–ò–Ø:")
        print("-" * 30)
        print("üîç –°–∫–∞–Ω–µ—Ä —Ä—ã–Ω–∫–∞: 5 –º–∏–Ω ‚Üí 10 –º–∏–Ω (–æ—Ç—á–µ—Ç—ã)")
        print("üìà PnL –º–æ–Ω–∏—Ç–æ—Ä: 5 –º–∏–Ω ‚Üí 10 –º–∏–Ω (–æ—Ç—á–µ—Ç—ã)")
        print("‚öôÔ∏è –ü—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞: –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô")
        print()
        
        print("üì± –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print("-" * 30)
        print("‚úÖ –û—Ç—á–µ—Ç—ã –≤ Telegram —Å—Ç–∞–ª–∏ —Ä–µ–∂–µ (–≤ 2 —Ä–∞–∑–∞)")
        print("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–æ–π –∂–µ —á–∞—Å—Ç–æ—Ç–æ–π")
        print("‚úÖ –ú–µ–Ω—å—à–µ —Å–ø–∞–º–∞ –≤ Telegram")
        print("‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")

if __name__ == "__main__":
    test_new_timings() 