#!/usr/bin/env python3
"""
–¢–µ—Å—Ç MEX WebSocket API
"""

import sys
import os
import asyncio
import json

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from mex_websocket import MarketDataStream

async def test_websocket_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WebSocket"""
    print("üîå –¢–µ—Å—Ç–∏—Ä—É—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MEX WebSocket...")
    
    stream = MarketDataStream()
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º WebSocket
        await stream.start()
        print("‚úÖ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω")
        
        # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ BTC —Ç–∏–∫–µ—Ä
        print("üì° –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ BTCUSDT —Ç–∏–∫–µ—Ä...")
        await stream.start_ticker_stream(['BTCUSDT'])
        
        # –ñ–¥–µ–º –¥–∞–Ω–Ω—ã–µ 30 —Å–µ–∫—É–Ω–¥
        print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (30 —Å–µ–∫—É–Ω–¥)...")
        await asyncio.sleep(30)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        btc_price = stream.get_price('BTCUSDT')
        if btc_price:
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ —Ü–µ–Ω–∞ BTC: ${btc_price:,.2f}")
        else:
            print("‚ùå –¶–µ–Ω–∞ BTC –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ü–µ–Ω—ã
        all_prices = stream.get_all_prices()
        print(f"üìä –í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ —Ü–µ–Ω: {len(all_prices)}")
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º WebSocket
        await stream.stop()
        print("‚úÖ WebSocket –æ—Ç–∫–ª—é—á–µ–Ω")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ WebSocket: {e}")
        await stream.stop()
        return False

async def test_multiple_streams():
    """–¢–µ—Å—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä—É—é –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ—Ç–æ–∫–∏...")
    
    stream = MarketDataStream()
    
    try:
        await stream.start()
        print("‚úÖ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω")
        
        # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Ç–æ–∫–æ–≤
        symbols = ['BTCUSDT', 'ETHUSDT']
        
        print(f"üì° –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ç–∏–∫–µ—Ä—ã: {symbols}")
        await stream.start_ticker_stream(symbols)
        
        print("üì° –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–≤–µ—á–∏ BTC 1m")
        await stream.start_kline_stream('BTCUSDT', '1m')
        
        print("üì° –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å—Ç–∞–∫–∞–Ω BTC")
        await stream.start_depth_stream('BTCUSDT')
        
        # –ñ–¥–µ–º –¥–∞–Ω–Ω—ã–µ
        print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (20 —Å–µ–∫—É–Ω–¥)...")
        await asyncio.sleep(20)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
        print("\nüìä –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
        
        for symbol in symbols:
            price = stream.get_price(symbol)
            if price:
                print(f"  {symbol}: ${price:,.2f}")
        
        btc_kline = stream.get_kline('BTCUSDT')
        if btc_kline:
            print(f"  BTC —Å–≤–µ—á–∞: ${btc_kline['close']:,.2f}")
        
        btc_depth = stream.get_depth('BTCUSDT')
        if btc_depth:
            print(f"  BTC —Å—Ç–∞–∫–∞–Ω: {len(btc_depth['bids'])} bids, {len(btc_depth['asks'])} asks")
        
        await stream.stop()
        print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        await stream.stop()
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–ï–°–¢ MEX WEBSOCKET API")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    test1_ok = await test_websocket_connection()
    
    # –¢–µ—Å—Ç 2: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ—Ç–æ–∫–∏
    test2_ok = await test_multiple_streams()
    
    print("\n" + "=" * 50)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–û–í:")
    print(f"  –ë–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {'‚úÖ OK' if test1_ok else '‚ùå FAIL'}")
    print(f"  –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ—Ç–æ–∫–∏: {'‚úÖ OK' if test2_ok else '‚ùå FAIL'}")
    
    if test1_ok and test2_ok:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("WebSocket –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ —Ç–æ—Ä–≥–æ–≤–æ–º –±–æ—Ç–µ")
    else:
        print("\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å MEX API")

if __name__ == "__main__":
    asyncio.run(main()) 