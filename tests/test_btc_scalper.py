#!/usr/bin/env python3
"""
–¢–µ—Å—Ç BTC —Å–∫–∞–ª—å–ø–µ—Ä–∞
"""

import asyncio
import time
from btc_scalper import BTCScalper

async def test_btc_scalper():
    """–¢–µ—Å—Ç BTC —Å–∫–∞–ª—å–ø–µ—Ä–∞"""
    print("üß™ –¢–ï–°–¢ BTC –°–ö–ê–õ–¨–ü–ï–†–ê")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫–∞–ª—å–ø–µ—Ä
    scalper = BTCScalper()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É BTC
    print("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω—ã BTC...")
    current_price = scalper.get_current_price()
    if current_price:
        print(f"üí∞ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ BTC: ${current_price:.2f}")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É BTC")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
    print("\nüìà –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...")
    tech_analysis = scalper.get_technical_analysis()
    if tech_analysis:
        print("‚úÖ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ–ª—É—á–µ–Ω:")
        print(f"   RSI (14): {tech_analysis.get('rsi_14', 'N/A'):.2f}")
        print(f"   SMA (20): ${tech_analysis.get('sma_20', 'N/A'):.2f}")
        print(f"   EMA (12): ${tech_analysis.get('ema_12', 'N/A'):.2f}")
        
        macd = tech_analysis.get('macd', {})
        if macd:
            print(f"   MACD Histogram: {macd.get('histogram', 'N/A'):.4f}")
        
        print(f"   Volume Ratio: {tech_analysis.get('volume_ratio', 'N/A'):.2f}")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑")
        return
    
    # AI –∞–Ω–∞–ª–∏–∑ —É–±—Ä–∞–Ω –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
    print("\nü§ñ AI –∞–Ω–∞–ª–∏–∑: –£–ë–†–ê–ù –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å–∫–∞–ª—å–ø–∏–Ω–≥–∞")
    ai_analysis = None
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
    print("\nüéØ –†–∞—Å—á–µ—Ç —Å–∫–∞–ª—å–ø–∏–Ω–≥–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤...")
    signals = scalper.calculate_scalping_signals(tech_analysis)
    print("‚úÖ –°–∏–≥–Ω–∞–ª—ã —Ä–∞—Å—Å—á–∏—Ç–∞–Ω—ã:")
    print(f"   –î–µ–π—Å—Ç–≤–∏–µ: {signals['action']}")
    print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {signals['confidence']:.1%}")
    print(f"   –ü—Ä–∏—á–∏–Ω—ã: {', '.join(signals['reasons'])}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    print("\nüìä –°—Ç–∞—Ç—É—Å —Å–∫–∞–ª—å–ø–µ—Ä–∞:")
    status = scalper.get_status()
    print(f"   –†–∞–±–æ—Ç–∞–µ—Ç: {'–î–∞' if status['is_running'] else '–ù–µ—Ç'}")
    print(f"   –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: ${status['position_size_usdt']}")
    print(f"   –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å: ${status['min_profit_usdt']}")
    print(f"   –ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {status['scan_interval']} —Å–µ–∫")
    print(f"   –í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫: {status['total_trades']}")
    print(f"   –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: ${status['total_profit']:.4f}")
    
    # –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
    print("\nüì± –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram...")
    test_message = "üß™ –¢–µ—Å—Ç BTC —Å–∫–∞–ª—å–ø–µ—Ä–∞\n\n–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç BTC —Å–∫–∞–ª—å–ø–µ—Ä–∞."
    result = scalper.send_telegram_message(test_message)
    if result:
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram")
    
    print("\n‚úÖ –¢–µ—Å—Ç BTC —Å–∫–∞–ª—å–ø–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    asyncio.run(test_btc_scalper())
