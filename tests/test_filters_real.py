#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∞–Ω—Ç–∏—Ö–∞–π–ø —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Å –†–ï–ê–õ–¨–ù–´–ú–ò –¥–∞–Ω–Ω—ã–º–∏ –±–∏—Ä–∂–∏ MEXC
"""

import sys
import logging
from anti_hype_filter import AntiHypeFilter
from rebalancer_anti_hype_filter import RebalancerAntiHypeFilter

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def test_filters():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    
    print("üß™ –¢–ï–°–¢ –ê–ù–¢–ò–•–ê–ô–ü –§–ò–õ–¨–¢–†–û–í –° –†–ï–ê–õ–¨–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò MEXC")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
    anti_hype = AntiHypeFilter()
    rebalancer = RebalancerAntiHypeFilter()
    
    symbols = ['BTCUSDC', 'ETHUSDC']
    
    for symbol in symbols:
        print(f"\nüîç –¢–ï–°–¢ {symbol}:")
        print("-" * 30)
        
        # –¢–µ—Å—Ç –æ–±—ã—á–Ω–æ–≥–æ –∞–Ω—Ç–∏—Ö–∞–π–ø —Ñ–∏–ª—å—Ç—Ä–∞
        print("üìä –û–ë–´–ß–ù–´–ô –ê–ù–¢–ò–•–ê–ô–ü –§–ò–õ–¨–¢–†:")
        try:
            result = anti_hype.check_buy_permission(symbol)
            print(f"   –†–∞–∑—Ä–µ—à–µ–Ω–æ: {result['allowed']}")
            print(f"   –ü—Ä–∏—á–∏–Ω–∞: {result['reason']}")
            print(f"   –ú–Ω–æ–∂–∏—Ç–µ–ª—å: {result['multiplier']}")
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –¥–Ω–µ–≤–Ω–æ–º –º–∞–∫—Å–∏–º—É–º–µ
            if 'daily_high' in result:
                print(f"   üìà –î–Ω–µ–≤–Ω–æ–π –º–∞–∫—Å–∏–º—É–º: ${result['daily_high']:.2f}")
                print(f"   üí∞ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${result['current_price']:.2f}")
                print(f"   üìè –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç —Ö–∞—è: {result['distance_percent']:.2f}%")
                if result.get('block_type'):
                    print(f"   üö´ –¢–∏–ø –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {result['block_type']}")
        except Exception as e:
            print(f"   ‚ùå –û–®–ò–ë–ö–ê: {e}")
        
        # –¢–µ—Å—Ç —Ä–µ–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–æ—á–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞
        print("\nüìä –†–ï–ë–ê–õ–ê–ù–°–ò–†–û–í–û–ß–ù–´–ô –§–ò–õ–¨–¢–†:")
        try:
            result = rebalancer.check_buy_permission(symbol)
            print(f"   –†–∞–∑—Ä–µ—à–µ–Ω–æ: {result['allowed']}")
            print(f"   –ü—Ä–∏—á–∏–Ω–∞: {result['reason']}")
            print(f"   –ú–Ω–æ–∂–∏—Ç–µ–ª—å: {result['multiplier']}")
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –¥–Ω–µ–≤–Ω–æ–º –º–∞–∫—Å–∏–º—É–º–µ
            if 'daily_high' in result:
                print(f"   üìà –î–Ω–µ–≤–Ω–æ–π –º–∞–∫—Å–∏–º—É–º: ${result['daily_high']:.2f}")
                print(f"   üí∞ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${result['current_price']:.2f}")
                print(f"   üìè –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç —Ö–∞—è: {result['distance_percent']:.2f}%")
                if result.get('block_type'):
                    print(f"   üö´ –¢–∏–ø –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {result['block_type']}")
        except Exception as e:
            print(f"   ‚ùå –û–®–ò–ë–ö–ê: {e}")
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")

if __name__ == "__main__":
    test_filters() 