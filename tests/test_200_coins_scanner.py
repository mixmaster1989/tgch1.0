#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∫–∞–Ω–µ—Ä–∞ —Å 200 –º–æ–Ω–µ—Ç–∞–º–∏
"""

import asyncio
import logging
from datetime import datetime
from market_scanner import MarketScanner

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def test_200_coins_scanner():
    """–¢–µ—Å—Ç —Å–∫–∞–Ω–µ—Ä–∞ —Å 200 –º–æ–Ω–µ—Ç–∞–º–∏"""
    try:
        print("üöÄ –¢–ï–°–¢ –°–ö–ê–ù–ï–†–ê –° 200 –ú–û–ù–ï–¢–ê–ú–ò")
        print("=" * 60)
        print(f"–í—Ä–µ–º—è: {datetime.now()}")
        print()
        
        # –°–æ–∑–¥–∞–µ–º —Å–∫–∞–Ω–µ—Ä
        scanner = MarketScanner()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä
        print("üìä –ü–û–õ–£–ß–ï–ù–ò–ï –¢–û–†–ì–û–í–´–• –ü–ê–†:")
        print("-" * 30)
        pairs = scanner.get_top_trading_pairs(200)
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø–∞—Ä: {len(pairs)}")
        print(f"üìã –ü–µ—Ä–≤—ã–µ 10 –ø–∞—Ä: {pairs[:10]}")
        print(f"üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –ø–∞—Ä: {pairs[-10:]}")
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞
        print("üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ü–ò–°–ö–ê –ü–ê–†:")
        print("-" * 30)
        scanner.update_trading_pairs()
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–∞—Ä: {len(scanner.trading_pairs)}")
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —Ç–µ—Å—Ç–∞)
        print("üîç –¢–ï–°–¢–û–í–û–ï –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–ï (–ø–µ—Ä–≤—ã–µ 10 –ø–∞—Ä):")
        print("-" * 30)
        
        # –í—Ä–µ–º–µ–Ω–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞
        test_pairs = scanner.trading_pairs[:10]
        scanner.trading_pairs = test_pairs
        
        scan_results = scanner.scan_market()
        
        if scan_results:
            print(f"‚úÖ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
            print(f"üìä –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: {scan_results['analyzed_pairs']}/{scan_results['total_pairs']}")
            print(f"üéØ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–∫—É–ø–∫–∏: {len(scan_results['buy_opportunities'])}")
            print(f"‚ö†Ô∏è –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ: {len(scan_results['neutral_pairs'])}")
            print(f"üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ: {len(scan_results['blocked_pairs'])}")
            print(f"‚ùå –û—à–∏–±–∫–∏: {len(scan_results['errors'])}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª—É—á—à–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
            if scan_results['buy_opportunities']:
                print(f"\nüéØ –õ–£–ß–®–ò–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:")
                for i, opp in enumerate(scan_results['buy_opportunities'][:3], 1):
                    print(f"   {i}. {opp['symbol']} - –°–∫–æ—Ä: {opp['score']}, RSI: {opp['rsi']:.1f}")
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
            print(f"\nüìã –û–¢–ß–ï–¢:")
            print("-" * 30)
            report = scanner.format_scan_report(scan_results)
            print(report)
            
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_200_coins_scanner()) 