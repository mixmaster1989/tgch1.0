#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É—Å–∏–ª–µ–Ω–Ω–æ–≥–æ –∞–Ω—Ç–∏-—Ö–∞–π–ø —Ñ–∏–ª—å—Ç—Ä–∞
–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞—â–∏—Ç—ã –æ—Ç –ø–æ–∫—É–ø–æ–∫ –Ω–∞ —Ö–∞–π–ø–∞—Ö
"""

import asyncio
import logging
from anti_hype_filter import AntiHypeFilter

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_enhanced_anti_hype_filter():
    """–¢–µ—Å—Ç —É—Å–∏–ª–µ–Ω–Ω–æ–≥–æ –∞–Ω—Ç–∏-—Ö–∞–π–ø —Ñ–∏–ª—å—Ç—Ä–∞"""
    
    filter = AntiHypeFilter()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
    test_symbols = [
        'BTCUSDT',  # –û—Å–Ω–æ–≤–Ω–æ–π
        'ETHUSDT',  # –û—Å–Ω–æ–≤–Ω–æ–π
        'BNBUSDT',  # –ê–ª—å—Ç
        'SOLUSDT',  # –ê–ª—å—Ç
        'DOTUSDT',  # –ê–ª—å—Ç
    ]
    
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–°–ò–õ–ï–ù–ù–û–ì–û –ê–ù–¢–ò-–•–ê–ô–ü –§–ò–õ–¨–¢–†–ê")
    print("=" * 60)
    
    for symbol in test_symbols:
        print(f"\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ {symbol}:")
        print("-" * 40)
        
        try:
            result = filter.check_buy_permission(symbol)
            
            status = "‚úÖ –†–ê–ó–†–ï–®–ï–ù–û" if result['allowed'] else "üö´ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–û"
            multiplier = result['multiplier']
            reason = result['reason']
            
            print(f"–°—Ç–∞—Ç—É—Å: {status}")
            print(f"–ú–Ω–æ–∂–∏—Ç–µ–ª—å: {multiplier}")
            print(f"–ü—Ä–∏—á–∏–Ω–∞: {reason}")
            
            # –ê–Ω–∞–ª–∏–∑ –º–Ω–æ–∂–∏—Ç–µ–ª—è
            if multiplier == 0.0:
                print("üíÄ –ü–û–õ–ù–ê–Ø –ë–õ–û–ö–ò–†–û–í–ö–ê - –ù–ï –ü–û–ö–£–ü–ê–¢–¨!")
            elif multiplier == 0.3:
                print("‚ö†Ô∏è –°–ò–õ–¨–ù–û–ï –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï - 70% —Å–Ω–∏–∂–µ–Ω–∏–µ")
            elif multiplier == 0.5:
                print("‚ö†Ô∏è –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï - 50% —Å–Ω–∏–∂–µ–Ω–∏–µ")
            elif multiplier == 1.0:
                print("‚úÖ –ù–û–†–ú–ê–õ–¨–ù–ê–Ø –ü–û–ö–£–ü–ö–ê")
            elif multiplier == 2.0:
                print("üöÄ DCA –£–°–ò–õ–ï–ù–ò–ï - 2x –ø–æ–∫—É–ø–∫–∞!")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        await asyncio.sleep(1)
    
    print("\n" + "=" * 60)
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("‚úÖ –§–∏–ª—å—Ç—Ä —É—Å–∏–ª–µ–Ω –ø—Ä–æ—Ç–∏–≤ —Ö–∞–π–ø–æ–≤")
    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –º–∞–∫—Å–∏–º—É–º–æ–≤")
    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ä–µ–º–æ–≤ —Ö–∞–π–ø–∞")
    print("‚úÖ –°–Ω–∏–∂–µ–Ω—ã –ø–æ—Ä–æ–≥–∏ RSI –¥–ª—è —Ä–∞–Ω–Ω–µ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏")
    print("‚úÖ –£—Å–∏–ª–µ–Ω—ã –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–π –∑–æ–Ω–µ")

if __name__ == "__main__":
    asyncio.run(test_enhanced_anti_hype_filter())
