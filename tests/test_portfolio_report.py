#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç—á–µ—Ç–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è —Å –±–∞–ª–∞–Ω—Å–∞–º–∏ USDT/USDC
"""

from pnl_monitor import PnLMonitor
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def test_portfolio_report():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è"""
    try:
        logger.info("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è...")
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–Ω–∏—Ç–æ—Ä–∞
        monitor = PnLMonitor()
        
        # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å—ã
        logger.info("üìä –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å—ã...")
        balances = monitor.get_balances()
        logger.info(f"üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤—ã: {list(balances.keys())}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –º–æ–Ω–µ—Ç
        logger.info("üè¶ –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ...")
        account_info = monitor.mex_api.get_account_info()
        
        usdt_balance = 0.0
        usdc_balance = 0.0
        
        if account_info and 'balances' in account_info:
            for balance in account_info['balances']:
                asset = balance['asset']
                total = float(balance.get('free', 0)) + float(balance.get('locked', 0))
                
                if asset == 'USDT' and total > 0:
                    usdt_balance = total
                    logger.info(f"üí∞ USDT –±–∞–ª–∞–Ω—Å: ${total:.2f}")
                elif asset == 'USDC' and total > 0:
                    usdc_balance = total
                    logger.info(f"üí∞ USDC –±–∞–ª–∞–Ω—Å: ${total:.2f}")
        
        # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞
        pnl_data = []
        portfolio_value = 0.0
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º BTC –∏ ETH
        for asset in ['BTC', 'ETH']:
            if asset in balances:
                quantity = balances[asset]['total']
                if quantity > 0:
                    symbol = 'BTCUSDC' if asset == 'BTC' else 'ETHUSDC'
                    current_price = monitor.get_current_price(symbol)
                    
                    if current_price:
                        # –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ä–∞—Å—á–µ—Ç PnL –¥–ª—è —Ç–µ—Å—Ç–∞
                        pnl = 0.0  # –í —Ç–µ—Å—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º 0
                        
                        pnl_data.append({
                            'asset': asset,
                            'quantity': quantity,
                            'current_price': current_price,
                            'pnl': pnl
                        })
                        
                        portfolio_value += quantity * current_price
                        
                        logger.info(f"üìä {asset}: {quantity:.6f} @ ${current_price:.4f}")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç
        total_portfolio = portfolio_value + usdt_balance + usdc_balance
        
        message_lines = [
            "üìä <b>–ü–û–†–¢–§–ï–õ–¨ BTC/ETH (–¢–ï–°–¢)</b>\n",
            f"üíé <b>–°–¢–û–ò–ú–û–°–¢–¨ –ü–û–†–¢–§–ï–õ–Ø</b>: <code>${portfolio_value:.2f}</code>\n",
            f"üè¶ <b>–û–ë–©–ê–Ø –°–¢–û–ò–ú–û–°–¢–¨</b>: <code>${total_portfolio:.2f}</code>\n\n",
            f"üíµ <b>–°–¢–ê–ë–ò–õ–¨–ù–´–ï –ú–û–ù–ï–¢–´:</b>\n",
            f"   üí∞ USDT: ${usdt_balance:.2f}\n",
            f"   üí∞ USDC: ${usdc_balance:.2f}\n\n"
        ]
        
        for item in pnl_data:
            pnl_status = "üìà" if item['pnl'] > 0 else "üìâ" if item['pnl'] < 0 else "‚û°Ô∏è"
            message_lines.append(
                f"{pnl_status} <b>{item['asset']}</b>:\n"
                f"   üìä {item['quantity']:.6f} @ ${item['current_price']:.4f}\n"
                f"   üíµ PnL: ${item['pnl']:.4f} (–ø–æ—Ä–æ–≥: $0.07)\n\n"
            )
        
        message_lines.append("üß™ <b>–¢–ï–°–¢–û–í–´–ô –û–¢–ß–ï–¢</b>")
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        test_report = "".join(message_lines)
        print("\n" + "="*50)
        print("–¢–ï–°–¢–û–í–´–ô –û–¢–ß–ï–¢ –ü–û–†–¢–§–ï–õ–Ø:")
        print("="*50)
        print(test_report)
        print("="*50)
        
        logger.info("‚úÖ –¢–µ—Å—Ç –æ—Ç—á–µ—Ç–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç –≤ Telegram (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        # monitor.send_telegram_message(test_report)
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        return False

if __name__ == "__main__":
    test_portfolio_report()

