#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫–∞ —Å –∑–∞–∫—É–ø—â–∏–∫–∞–º–∏ –∞–ª—å—Ç–æ–≤
"""

import asyncio
from active_50_50_balancer import Active5050Balancer
from market_scanner import MarketScanner
from alt_monitor import AltsMonitor

async def test_balancer_permission():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫–∞...")
    
    balancer = Active5050Balancer()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏
    test_amounts = [10.0, 50.0, 100.0]
    
    for amount in test_amounts:
        print(f"\nüí∞ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—É–º–º—É: ${amount}")
        permission = balancer.check_purchase_permission(amount, "ALTS")
        
        print(f"   –†–∞–∑—Ä–µ—à–µ–Ω–æ: {permission['allowed']}")
        print(f"   –ü—Ä–∏—á–∏–Ω–∞: {permission['reason']}")
        print(f"   –ê–ª—å—Ç—ã: {permission['current_alts_ratio']*100:.1f}%")
        print(f"   BTC/ETH: {permission['current_btceth_ratio']*100:.1f}%")

def test_market_scanner_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å market_scanner"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å market_scanner...")
    
    scanner = MarketScanner()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
    if hasattr(scanner, 'balancer'):
        print("   ‚úÖ –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ market_scanner")
    else:
        print("   ‚ùå –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –ù–ï –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ market_scanner")

def test_alt_monitor_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å alt_monitor"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å alt_monitor...")
    
    monitor = AltsMonitor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
    if hasattr(monitor, 'balancer'):
        print("   ‚úÖ –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ alt_monitor")
    else:
        print("   ‚ùå –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –ù–ï –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ alt_monitor")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("ÔøΩÔøΩ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ë–ê–õ–ê–ù–°–ò–†–û–í–©–ò–ö–ê –° –ó–ê–ö–£–ü–©–ò–ö–ê–ú–ò –ê–õ–¨–¢–û–í")
    print("=" * 70)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
    await test_balancer_permission()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å market_scanner
    test_market_scanner_integration()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å alt_monitor
    test_alt_monitor_integration()
    
    print("\n" + "=" * 70)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(main())
