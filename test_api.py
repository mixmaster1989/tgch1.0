#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API MEX
"""

from mex_api import MexAPI
import json

def main():
    api = MexAPI()
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API MEX...")
    
    try:
        # 1. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
        print("\n1. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ:")
        account_info = api.get_account_info()
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {account_info}")
        
        # 2. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã
        print("\n2. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã BTCUSDT:")
        price_info = api.get_ticker_price('BTCUSDT')
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {price_info}")
        
        # 3. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞–∫–∞–Ω–∞
        print("\n3. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞–∫–∞–Ω–∞ BTCUSDT:")
        depth_info = api.get_depth('BTCUSDT', 5)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {depth_info}")
        
        # 4. –¢–µ—Å—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ—Ä–¥–µ—Ä–∞ (—Å –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–æ–π —Å—É–º–º–æ–π)
        print("\n4. –¢–µ—Å—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ—Ä–¥–µ—Ä–∞ BTCUSDT:")
        test_order = api.place_order(
            symbol='BTCUSDT',
            side='BUY',
            quantity=0.0001,  # –û—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
            price=100000  # –ù–∏–∑–∫–∞—è —Ü–µ–Ω–∞, —á—Ç–æ–±—ã –æ—Ä–¥–µ—Ä –Ω–µ –∏—Å–ø–æ–ª–Ω–∏–ª—Å—è
        )
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {test_order}")
        
        # 5. –¢–µ—Å—Ç —Å –¥—Ä—É–≥–∏–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
        test_symbols = ['ETHUSDT', 'BNBUSDT', 'ADAUSDT', 'BROCKUSDT']
        for symbol in test_symbols:
            print(f"\n5. –¢–µ—Å—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ—Ä–¥–µ—Ä–∞ {symbol}:")
            try:
                test_order = api.place_order(
                    symbol=symbol,
                    side='BUY',
                    quantity=0.001,
                    price=1  # –û—á–µ–Ω—å –Ω–∏–∑–∫–∞—è —Ü–µ–Ω–∞
                )
                print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {test_order}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞: {e}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main() 