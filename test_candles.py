#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ—á–µ–π –ø–æ —Ä–∞–∑–Ω—ã–º –ø–∞—Ä–∞–º
"""

from mex_api import MexAPI
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_candles():
    api = MexAPI()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–∞—Ä—ã
    test_pairs = [
        'BTCUSDC', 'ETHUSDC', 'BTCUSDT', 'ETHUSDT',
        'BNBUSDC', 'ADAUSDC', 'SOLUSDC', 'BROCKUSDC'
    ]
    
    for pair in test_pairs:
        try:
            logger.info(f"üîç –¢–µ—Å—Ç–∏—Ä—É—é –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–µ—á–µ–π –¥–ª—è {pair}...")
            
            # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —á–∞—Å–æ–≤—ã–µ —Å–≤–µ—á–∏
            klines = api.get_klines(pair, '60m', 1)
            
            if klines and len(klines) > 0:
                candle = klines[0]
                logger.info(f"‚úÖ {pair}: –°–≤–µ—á–∏ –¥–æ—Å—Ç—É–ø–Ω—ã")
                logger.info(f"   –û—Ç–∫—Ä—ã—Ç–∏–µ: ${float(candle[1]):.4f}")
                logger.info(f"   –ú–∞–∫—Å–∏–º—É–º: ${float(candle[2]):.4f}")
                logger.info(f"   –ú–∏–Ω–∏–º—É–º: ${float(candle[3]):.4f}")
                logger.info(f"   –ó–∞–∫—Ä—ã—Ç–∏–µ: ${float(candle[4]):.4f}")
            else:
                logger.warning(f"‚ö†Ô∏è {pair}: –°–≤–µ—á–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –∏–ª–∏ –ø—É—Å—Ç—ã–µ")
                
        except Exception as e:
            logger.error(f"‚ùå {pair}: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ—á–µ–π - {e}")

if __name__ == "__main__":
    test_candles() 