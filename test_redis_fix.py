#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Redis –æ—à–∏–±–∫–∏
"""

import asyncio
import redis.asyncio as redis

async def test_redis_fix():
    """–¢–µ—Å—Ç Redis –º–µ—Ç–æ–¥–æ–≤"""
    print("üîß –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø REDIS")
    print("=" * 30)
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis
        r = redis.Redis(host='localhost', port=6379, db=0)
        
        # –¢–µ—Å—Ç –º–µ—Ç–æ–¥–æ–≤
        key = "test:price_history:BTCUSDT"
        
        # –¢–µ—Å—Ç lpush
        await r.lpush(key, 115000.0)
        await r.lpush(key, 115100.0)
        await r.lpush(key, 115200.0)
        
        # –¢–µ—Å—Ç ltrim
        await r.ltrim(key, 0, 9)  # –û—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        
        # –¢–µ—Å—Ç expire
        await r.expire(key, 3600)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞
        length = await r.llen(key)
        print(f"‚úÖ Redis —Ä–∞–±–æ—Ç–∞–µ—Ç: {length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–∫–µ")
        
        # –û—á–∏—Å—Ç–∫–∞
        await r.delete(key)
        
        return True
        
    except Exception as e:
        print(f"‚ùå Redis –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    asyncio.run(test_redis_fix()) 