#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤
"""

from scalper_manager import ScalperManager

def main():
    print("üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞...")
    print("=" * 50)

    manager = ScalperManager()

    print(f"–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${manager.min_usdc_balance_after_scalper:.2f}")
    print(f"–†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: ${manager.position_size_usdc:.2f}")
    print(f"–ë–∞–ª–∞–Ω—Å USDC: ${manager.get_usdc_balance():.2f}")

    print("\n–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞:")
    for symbol in ['BTCUSDC', 'ETHUSDC']:
        can_create, reason = manager.can_create_new_scalper(symbol)
        status = "‚úÖ –ú–æ–∂–Ω–æ" if can_create else "‚ùå –ù–µ–ª—å–∑—è"
        print(f"   {symbol}: {status} - {reason}")

    print("\n–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ —Å–∫–∞–ª—å–ø–µ—Ä–∞...")
    success = manager.start_new_scalper('BTCUSDC')
    if success:
        print("‚úÖ BTC —Å–∫–∞–ª—å–ø–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"   –í—Å–µ–≥–æ –∑–∞–ø—É—â–µ–Ω–æ: {len(manager.running_scalpers['BTCUSDC'])}")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å BTC —Å–∫–∞–ª—å–ø–µ—Ä")

    print("\n–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç...")
    manager.send_hourly_report()

if __name__ == "__main__":
    main()







