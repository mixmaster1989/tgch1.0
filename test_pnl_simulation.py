#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∞—è —Å–∏–º—É–ª—è—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ PnL –º–æ–Ω–∏—Ç–æ—Ä–∞
–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç PnL —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º FIFO –º–µ—Ç–æ–¥–∞
"""

import time
from datetime import datetime
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

class PnLSimulator:
    """–°–∏–º—É–ª—è—Ç–æ—Ä PnL –º–æ–Ω–∏—Ç–æ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏–∫–∏"""
    
    def __init__(self):
        self.profit_threshold = 0.40  # –ü–æ—Ä–æ–≥ –ø—Ä–∏–±—ã–ª–∏ $0.40
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –æ—Ä–¥–µ—Ä–æ–≤ ETH
        self.eth_order_history = [
            # –ü–æ–∫—É–ø–∫–∏ (FIFO - –ø–µ—Ä–≤—ã–º–∏ –∫—É–ø–ª–µ–Ω–Ω—ã–µ)
            {'side': 'BUY', 'quantity': 0.05, 'price': 4200.0, 'time': 1000},  # $210.00
            {'side': 'BUY', 'quantity': 0.03, 'price': 4210.0, 'time': 2000},  # $126.30
            {'side': 'BUY', 'quantity': 0.02, 'price': 4220.0, 'time': 3000},  # $84.40
            {'side': 'BUY', 'quantity': 0.04, 'price': 4230.0, 'time': 4000},  # $169.20
            {'side': 'BUY', 'quantity': 0.01, 'price': 4240.0, 'time': 5000},  # $42.40
            
            # –ü—Ä–æ–¥–∞–∂–∏ (–ø—Ä–æ–¥–∞–µ–º –º–µ–Ω—å—à–µ, —á–µ–º –∫—É–ø–∏–ª–∏)
            {'side': 'SELL', 'quantity': 0.08, 'price': 4250.0, 'time': 6000}, # $340.00
            {'side': 'SELL', 'quantity': 0.05, 'price': 4240.0, 'time': 7000}, # $212.00
            {'side': 'SELL', 'quantity': 0.02, 'price': 4230.0, 'time': 8000}, # $84.60
        ]
        
        # –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å ETH (–æ—Å—Ç–∞—Ç–æ–∫ –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂: 0.15 - 0.15 = 0.00)
        # –ù–æ –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —É –Ω–∞—Å –µ—Å—Ç—å 0.00242 ETH, –ø–æ—ç—Ç–æ–º—É –¥–æ–±–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–Ω—É –ø–æ–∫—É–ø–∫—É
        self.eth_order_history.append(
            {'side': 'BUY', 'quantity': 0.00242, 'price': 4200.0, 'time': 9000}  # $10.16
        )
        
        self.current_eth_balance = 0.00242
        
        # –¢–µ–∫—É—â–∞—è —Ä—ã–Ω–æ—á–Ω–∞—è —Ü–µ–Ω–∞ ETH
        self.current_eth_price = 4200.0
        
    def calculate_fifo_pnl(self):
        """–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç PnL —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º FIFO –º–µ—Ç–æ–¥–∞"""
        logger.info("üîç –†–∞—Å—á–µ—Ç PnL —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º FIFO –º–µ—Ç–æ–¥–∞...")
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏
        buy_orders = [order for order in self.eth_order_history if order['side'] == 'BUY']
        sell_orders = [order for order in self.eth_order_history if order['side'] == 'SELL']
        
        logger.info(f"üìä –ü–æ–∫—É–ø–∫–∏: {len(buy_orders)} –æ—Ä–¥–µ—Ä–æ–≤")
        logger.info(f"üìä –ü—Ä–æ–¥–∞–∂–∏: {len(sell_orders)} –æ—Ä–¥–µ—Ä–æ–≤")
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–µ –æ–±—ä–µ–º—ã
        total_bought = sum(order['quantity'] for order in buy_orders)
        total_sold = sum(order['quantity'] for order in sell_orders)
        remaining_quantity = total_bought - total_sold
        
        logger.info(f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ETH: {total_bought:.6f}")
        logger.info(f"üìä –ü—Ä–æ–¥–∞–Ω–æ ETH: {total_sold:.6f}")
        logger.info(f"üìä –û—Å—Ç–∞—Ç–æ–∫ ETH: {remaining_quantity:.6f}")
        logger.info(f"üìä –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {self.current_eth_balance:.6f}")
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ä–µ–¥–Ω—é—é —Ü–µ–Ω—É –ø–æ–∫—É–ø–∫–∏ –¥–ª—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –º–æ–Ω–µ—Ç
        total_cost = sum(order['quantity'] * order['price'] for order in buy_orders)
        avg_buy_price = total_cost / total_bought
        
        logger.info(f"üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∫—É–ø–æ–∫: ${total_cost:.2f}")
        logger.info(f"üí∞ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏: ${avg_buy_price:.4f}")
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º PnL –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞
        current_value = self.current_eth_balance * self.current_eth_price
        cost_basis = self.current_eth_balance * avg_buy_price
        pnl = current_value - cost_basis
        
        logger.info(f"üìà –¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${current_value:.4f}")
        logger.info(f"üìà –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å: ${cost_basis:.4f}")
        logger.info(f"üìà PnL: ${pnl:.4f}")
        
        return pnl
    
    def calculate_wrong_pnl(self):
        """–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç PnL (–∫–∞–∫ –±—ã–ª–æ —Ä–∞–Ω—å—à–µ)"""
        logger.info("‚ö†Ô∏è –†–∞—Å—á–µ—Ç PnL –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –º–µ—Ç–æ–¥–æ–º (–∫–∞–∫ –±—ã–ª–æ —Ä–∞–Ω—å—à–µ)...")
        
        # –ë–µ—Ä–µ–º –≤—Å–µ –ø–æ–∫—É–ø–∫–∏ –±–µ–∑ —É—á–µ—Ç–∞ –ø—Ä–æ–¥–∞–∂
        buy_orders = [order for order in self.eth_order_history if order['side'] == 'BUY']
        
        total_cost = sum(order['quantity'] * order['price'] for order in buy_orders)
        total_quantity = sum(order['quantity'] for order in buy_orders)
        avg_buy_price = total_cost / total_quantity
        
        logger.info(f"üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∫—É–ø–æ–∫: ${total_cost:.2f}")
        logger.info(f"üí∞ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫: {total_quantity:.6f}")
        logger.info(f"üí∞ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏: ${avg_buy_price:.4f}")
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º PnL –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ
        current_value = self.current_eth_balance * self.current_eth_price
        cost_basis = self.current_eth_balance * avg_buy_price
        pnl = current_value - cost_basis
        
        logger.info(f"üìà –¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${current_value:.4f}")
        logger.info(f"üìà –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å: ${cost_basis:.4f}")
        logger.info(f"üìà PnL (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π): ${pnl:.4f}")
        
        return pnl
    
    def simulate_trading_scenario(self):
        """–°–∏–º—É–ª—è—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è"""
        logger.info("üöÄ –°–∏–º—É–ª—è—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è...")
        logger.info("=" * 60)
        
        # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ = $4200 (–Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–π –ø–æ–∫—É–ø–∫–∏)
        logger.info("üìä –°–¶–ï–ù–ê–†–ò–ô 1: –¶–µ–Ω–∞ ETH = $4200 (–Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–π –ø–æ–∫—É–ø–∫–∏)")
        self.current_eth_price = 4200.0
        
        wrong_pnl = self.calculate_wrong_pnl()
        correct_pnl = self.calculate_fifo_pnl()
        
        logger.info(f"üî¥ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π PnL: ${wrong_pnl:.4f}")
        logger.info(f"üü¢ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π PnL: ${correct_pnl:.4f}")
        logger.info(f"üìä –†–∞–∑–Ω–∏—Ü–∞: ${abs(wrong_pnl - correct_pnl):.4f}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å
        should_sell_wrong = wrong_pnl > self.profit_threshold
        should_sell_correct = correct_pnl > self.profit_threshold
        
        logger.info(f"üéØ –ü—Ä–æ–¥–∞–∂–∞ –ø–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É PnL: {'–î–ê' if should_sell_wrong else '–ù–ï–¢'}")
        logger.info(f"üéØ –ü—Ä–æ–¥–∞–∂–∞ –ø–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É PnL: {'–î–ê' if should_sell_correct else '–ù–ï–¢'}")
        
        logger.info("=" * 60)
        
        # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ = $4250 (–≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π –ø–æ–∫—É–ø–∫–∏)
        logger.info("üìä –°–¶–ï–ù–ê–†–ò–ô 2: –¶–µ–Ω–∞ ETH = $4250 (–≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π –ø–æ–∫—É–ø–∫–∏)")
        self.current_eth_price = 4250.0
        
        wrong_pnl = self.calculate_wrong_pnl()
        correct_pnl = self.calculate_fifo_pnl()
        
        logger.info(f"üî¥ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π PnL: ${wrong_pnl:.4f}")
        logger.info(f"üü¢ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π PnL: ${correct_pnl:.4f}")
        logger.info(f"üìä –†–∞–∑–Ω–∏—Ü–∞: ${abs(wrong_pnl - correct_pnl):.4f}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å
        should_sell_wrong = wrong_pnl > self.profit_threshold
        should_sell_correct = correct_pnl > self.profit_threshold
        
        logger.info(f"üéØ –ü—Ä–æ–¥–∞–∂–∞ –ø–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É PnL: {'–î–ê' if should_sell_wrong else '–ù–ï–¢'}")
        logger.info(f"üéØ –ü—Ä–æ–¥–∞–∂–∞ –ø–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É PnL: {'–î–ê' if should_sell_correct else '–ù–ï–¢'}")
        
        logger.info("=" * 60)
        
        # –°—Ü–µ–Ω–∞—Ä–∏–π 3: –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ = $4300 (–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π –ø–æ–∫—É–ø–∫–∏)
        logger.info("üìä –°–¶–ï–ù–ê–†–ò–ô 3: –¶–µ–Ω–∞ ETH = $4300 (–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π –ø–æ–∫—É–ø–∫–∏)")
        self.current_eth_price = 4300.0
        
        wrong_pnl = self.calculate_wrong_pnl()
        correct_pnl = self.calculate_fifo_pnl()
        
        logger.info(f"üî¥ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π PnL: ${wrong_pnl:.4f}")
        logger.info(f"üü¢ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π PnL: ${correct_pnl:.4f}")
        logger.info(f"üìä –†–∞–∑–Ω–∏—Ü–∞: ${abs(wrong_pnl - correct_pnl):.4f}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å
        should_sell_wrong = wrong_pnl > self.profit_threshold
        should_sell_correct = correct_pnl > self.profit_threshold
        
        logger.info(f"üéØ –ü—Ä–æ–¥–∞–∂–∞ –ø–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É PnL: {'–î–ê' if should_sell_wrong else '–ù–ï–¢'}")
        logger.info(f"üéØ –ü—Ä–æ–¥–∞–∂–∞ –ø–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É PnL: {'–î–ê' if should_sell_correct else '–ù–ï–¢'}")
        
        logger.info("=" * 60)
    
    def show_detailed_analysis(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã"""
        logger.info("üîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´")
        logger.info("=" * 60)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –æ—Ä–¥–µ—Ä–∞ –ø–æ –ø–æ—Ä—è–¥–∫—É
        logger.info("üìã –ò–°–¢–û–†–ò–Ø –û–†–î–ï–†–û–í (FIFO):")
        for i, order in enumerate(self.eth_order_history, 1):
            side_emoji = "üü¢" if order['side'] == 'BUY' else "üî¥"
            logger.info(f"{i:2d}. {side_emoji} {order['side']}: {order['quantity']:.6f} ETH @ ${order['price']:.2f}")
        
        logger.info("=" * 60)
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º—É
        logger.info("‚ùå –ü–†–û–ë–õ–ï–ú–ê –°–¢–ê–†–û–ì–û –ú–ï–¢–û–î–ê:")
        logger.info("   - –£—á–∏—Ç—ã–≤–∞–ª –í–°–ï –ø–æ–∫—É–ø–∫–∏ (0.15 ETH)")
        logger.info("   - –ù–µ —É—á–∏—Ç—ã–≤–∞–ª, —á—Ç–æ –±–æ–ª—å—à–∞—è —á–∞—Å—Ç—å —É–∂–µ –ø—Ä–æ–¥–∞–Ω–∞")
        logger.info("   - –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏ –±—ã–ª–∞ –∑–∞–≤—ã—à–µ–Ω–∞")
        logger.info("   - PnL —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–ª—Å—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        
        logger.info("‚úÖ –†–ï–®–ï–ù–ò–ï (FIFO –º–µ—Ç–æ–¥):")
        logger.info("   - –£—á–∏—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –º–æ–Ω–µ—Ç—ã (0.00242 ETH)")
        logger.info("   - –ü—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å—Ä–µ–¥–Ω—é—é —Ü–µ–Ω—É –ø–æ–∫—É–ø–∫–∏")
        logger.info("   - PnL —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        logger.info("   - –ù–µ—Ç –ª–æ–∂–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üöÄ –ó–ê–ü–£–°–ö –°–ò–ú–£–õ–Ø–¶–ò–ò PnL –ú–û–ù–ò–¢–û–†–ê")
    logger.info("=" * 60)
    
    simulator = PnLSimulator()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–º—É–ª—è—Ü–∏—é
    simulator.simulate_trading_scenario()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    simulator.show_detailed_analysis()
    
    logger.info("=" * 60)
    logger.info("‚úÖ –°–ò–ú–£–õ–Ø–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    logger.info("üí° –¢–µ–ø–µ—Ä—å PnL –º–æ–Ω–∏—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")

if __name__ == "__main__":
    main() 