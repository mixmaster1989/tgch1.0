#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ä–¥–µ—Ä–∞ ETH
"""

from mex_api import MexAPI

def check_eth_order():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ä–¥–µ—Ä ETH"""
    try:
        api = MexAPI()
        
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ä–¥–µ—Ä ETHUSDC...")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ä–¥–µ—Ä
        orders = api.get_order_history('ETHUSDC', limit=1)
        
        if not orders:
            print("‚ùå –ù–µ—Ç –æ—Ä–¥–µ—Ä–æ–≤ ETHUSDC")
            return
        
        order = orders[0]
        
        print("üìä –î–ï–¢–ê–õ–ò –û–†–î–ï–†–ê:")
        print("=" * 50)
        print(f"ID: {order['orderId']}")
        print(f"–¢–∏–ø: {order['type']}")
        print(f"–°—Ç–æ—Ä–æ–Ω–∞: {order['side']}")
        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {order['executedQty']}")
        print(f"–¶–µ–Ω–∞: ${float(order['price']):.2f}")
        print(f"–°—É–º–º–∞: ${float(order['cummulativeQuoteQty']):.4f}")
        print(f"–°—Ç–∞—Ç—É—Å: {order['status']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —ç—Ç–æ –º–µ–π–∫–µ—Ä
        if order['type'] == 'LIMIT':
            print("‚úÖ –õ–ò–ú–ò–¢–ù–´–ô –û–†–î–ï–† (–º–µ–π–∫–µ—Ä)")
        else:
            print("‚ùå –ù–ï –ª–∏–º–∏—Ç–Ω—ã–π –æ—Ä–¥–µ—Ä")
        
        # –ê–Ω–∞–ª–∏–∑ –∫–æ–º–∏—Å—Å–∏–∏
        expected_amount = 4.9  # –û–∂–∏–¥–∞–µ–º–∞—è —Å—É–º–º–∞
        actual_amount = float(order['cummulativeQuoteQty'])
        commission = expected_amount - actual_amount
        
        print(f"\nüí∞ –ê–ù–ê–õ–ò–ó –ö–û–ú–ò–°–°–ò–ò:")
        print(f"–û–∂–∏–¥–∞–ª–æ—Å—å: ${expected_amount:.2f} USDC")
        print(f"–ü–æ—Ç—Ä–∞—á–µ–Ω–æ: ${actual_amount:.4f} USDC")
        print(f"–ö–æ–º–∏—Å—Å–∏—è: ${commission:.4f} USDC")
        print(f"–ö–æ–º–∏—Å—Å–∏—è –≤ %: {(commission/expected_amount)*100:.2f}%")
        
        if commission > 0:
            print("üí∏ –ï—Å—Ç—å –∫–æ–º–∏—Å—Å–∏—è")
        else:
            print("‚úÖ –ù–µ—Ç –∫–æ–º–∏—Å—Å–∏–∏ (–º–µ–π–∫–µ—Ä)")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_eth_order()
