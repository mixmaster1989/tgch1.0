import requests
import os
from config import TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID

class StartupDashboard:
    def __init__(self):
        self.bot_token = TELEGRAM_BOT_TOKEN
        self.chat_id = TELEGRAM_CHAT_ID
    
    def send_telegram_message(self, message: str):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
        url = f"https://api.telegram.org/bot{self.bot_token}/sendMessage"
        data = {
            'chat_id': self.chat_id,
            'text': message,
            'parse_mode': 'HTML'
        }
        try:
            response = requests.post(url, data=data)
            return response.json()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")
            return None
    
    def send_video(self, video_path: str, caption: str = ""):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ –≤ Telegram"""
        if not os.path.exists(video_path):
            print(f"–§–∞–π–ª {video_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return None
            
        url = f"https://api.telegram.org/bot{self.bot_token}/sendVideo"
        
        try:
            with open(video_path, 'rb') as video_file:
                files = {'video': video_file}
                data = {
                    'chat_id': self.chat_id,
                    'caption': caption,
                    'parse_mode': 'HTML'
                }
                response = requests.post(url, files=files, data=data)
                return response.json()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ –≤ Telegram: {e}")
            return None
    
    def send_startup_notification(self):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ"""
        video_path = "intro.mp4"
        caption = "üöÄ <b>MEXCAITRADE –ó–ê–ü–£–©–ï–ù</b>\n\nü§ñ –¢–æ—Ä–≥–æ–≤—ã–π –±–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
        
        result = self.send_video(video_path, caption)
        
        if result and result.get('ok'):
            print("–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
        else:
            print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ")
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        
        return result
    
    def send_auto_purchase_notification(self):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫–∞—Ö (–æ—Ç–∫–ª—é—á–µ–Ω–æ)"""
        return None
    
    def send_extended_portfolio_report(self):
        """–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ—Ç—á—ë—Ç –æ –ø–æ—Ä—Ç—Ñ–µ–ª–µ (–æ—Ç–∫–ª—é—á–µ–Ω)"""
        return True