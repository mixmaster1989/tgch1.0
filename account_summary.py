#!/usr/bin/env python3
"""
–°–≤–æ–¥–∫–∞ –ø–æ –∞–∫–∫–∞—É–Ω—Ç—É MEXC
–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ API –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ Telegram
"""

import requests
import json
from datetime import datetime
from mex_api import MexAPI
from config import TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID

def send_telegram_message(text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram"""
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
        data = {
            'chat_id': TELEGRAM_CHAT_ID,
            'text': text,
            'parse_mode': 'HTML'
        }
        response = requests.post(url, data=data)
        return response.status_code == 200
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")
        return False

def get_account_summary():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞"""
    try:
        api = MexAPI()
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞
        account_info = api.get_account_info()
        if not account_info:
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞"
        
        # –ü–∞—Ä—Å–∏–º –±–∞–ª–∞–Ω—Å—ã
        balances = {}
        total_usdt = 0
        
        for balance in account_info.get('balances', []):
            asset = balance.get('asset', '')
            free = float(balance.get('free', 0))
            locked = float(balance.get('locked', 0))
            total = free + locked
            
            if total > 0:
                balances[asset] = {
                    'free': free,
                    'locked': locked,
                    'total': total
                }
                
                if asset == 'USDT':
                    total_usdt = total
        
        # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—ã –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ USDT
        portfolio_value = 0
        asset_values = {}
        
        for asset, balance in balances.items():
            if asset in ['USDT', 'USDC']:
                value = balance['total']
                asset_values[asset] = value
                portfolio_value += value
            else:
                try:
                    ticker = api.get_ticker_price(f"{asset}USDT")
                    if ticker and 'price' in ticker:
                        price = float(ticker['price'])
                        value = balance['total'] * price
                        asset_values[asset] = value
                        portfolio_value += value
                    else:
                        asset_values[asset] = 0
                except:
                    asset_values[asset] = 0
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –æ—Ä–¥–µ—Ä–∞
        open_orders = []
        try:
            orders = api.get_open_orders()
            if isinstance(orders, list):
                open_orders = orders
        except:
            pass
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–≤–æ–¥–∫—É
        message = f"<b>üìä –°–í–û–î–ö–ê –ê–ö–ö–ê–£–ù–¢–ê MEXC</b>\n"
        message += f"{'='*40}\n\n"
        
        # –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
        message += f"<b>üí∞ –û–ë–©–ê–Ø –°–¢–û–ò–ú–û–°–¢–¨ –ü–û–†–¢–§–ï–õ–Ø</b>\n"
        message += f"üíµ ${portfolio_value:.2f} USDT\n\n"
        
        # –ê–∫—Ç–∏–≤—ã
        if asset_values:
            message += f"<b>üè¶ –ê–ö–¢–ò–í–´</b>\n"
            sorted_assets = sorted(asset_values.items(), key=lambda x: x[1], reverse=True)
            
            for asset, value in sorted_assets:
                if value > 0.01:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–∏–º—ã–µ —Å—É–º–º—ã
                    balance_info = balances.get(asset, {})
                    total_amount = balance_info.get('total', 0)
                    free_amount = balance_info.get('free', 0)
                    locked_amount = balance_info.get('locked', 0)
                    
                    percentage = (value / portfolio_value * 100) if portfolio_value > 0 else 0
                    
                    message += f"‚Ä¢ <b>{asset}</b>: {total_amount:.6f}\n"
                    message += f"  üíµ ${value:.2f} ({percentage:.1f}%)\n"
                    
                    if locked_amount > 0:
                        message += f"  üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: {locked_amount:.6f}\n"
                    message += f"  üÜì –î–æ—Å—Ç—É–ø–Ω–æ: {free_amount:.6f}\n\n"
        
        # –û—Ç–∫—Ä—ã—Ç—ã–µ –æ—Ä–¥–µ—Ä–∞
        if open_orders:
            message += f"<b>üìã –û–¢–ö–†–´–¢–´–ï –û–†–î–ï–†–ê ({len(open_orders)})</b>\n"
            for order in open_orders[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5
                symbol = order.get('symbol', 'N/A')
                side = order.get('side', 'N/A')
                order_type = order.get('type', 'N/A')
                price = float(order.get('price', 0))
                qty = float(order.get('origQty', 0))
                
                message += f"‚Ä¢ {symbol} {side} {order_type}\n"
                message += f"  üí∞ {qty:.6f} @ ${price:.6f}\n"
            
            if len(open_orders) > 5:
                message += f"  ... –∏ –µ—â–µ {len(open_orders) - 5} –æ—Ä–¥–µ—Ä–æ–≤\n"
            message += "\n"
        else:
            message += f"<b>üìã –û–¢–ö–†–´–¢–´–ï –û–†–î–ï–†–ê</b>\n"
            message += f"–ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤\n\n"
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        message += f"<b>üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê</b>\n"
        message += f"üî¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∞–∫—Ç–∏–≤–æ–≤: {len([v for v in asset_values.values() if v > 0.01])}\n"
        message += f"üìã –û—Ç–∫—Ä—ã—Ç—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤: {len(open_orders)}\n"
        message += f"‚è∞ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}\n\n"
        
        message += f"{'='*40}\n"
        message += f"<b>üöÄ MEXCAITRADE</b>"
        
        return message
        
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {str(e)}"

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–∫—É
    summary = get_account_summary()
    
    # –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
    print("\n" + "="*50)
    print("–°–í–û–î–ö–ê –ê–ö–ö–ê–£–ù–¢–ê")
    print("="*50)
    # –£–±–∏—Ä–∞–µ–º HTML —Ç–µ–≥–∏ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
    console_summary = summary.replace('<b>', '').replace('</b>', '').replace('<i>', '').replace('</i>', '')
    print(console_summary)
    print("="*50)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
    print("\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram...")
    success = send_telegram_message(summary)
    
    if success:
        print("‚úÖ –°–≤–æ–¥–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram")

if __name__ == "__main__":
    main()