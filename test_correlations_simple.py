#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π
"""

import asyncio
import time
from advanced_correlation_analyzer import advanced_correlation_analyzer

async def test_correlations_simple():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π"""
    print("üîó –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ö–û–†–†–ï–õ–Ø–¶–ò–ô")
    print("=" * 40)
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        timestamp = int(time.time() * 1000)
        
        print("üìä –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        
        # ETHUSDT –¥–∞–Ω–Ω—ã–µ
        for i in range(20):
            eth_price = 3700.0 * (1 + (i * 0.001 - 0.01))
            advanced_correlation_analyzer.add_price_data('ETHUSDT', eth_price, timestamp + i * 1000)
        
        # BTCUSDT –¥–∞–Ω–Ω—ã–µ
        for i in range(20):
            btc_price = 45000.0 * (1 + (i * 0.002 - 0.02))
            advanced_correlation_analyzer.add_price_data('BTCUSDT', btc_price, timestamp + i * 1000)
        
        # ADAUSDT –¥–∞–Ω–Ω—ã–µ
        for i in range(20):
            ada_price = 0.5 * (1 + (i * 0.001 - 0.01))
            advanced_correlation_analyzer.add_price_data('ADAUSDT', ada_price, timestamp + i * 1000)
        
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π...")
        
        eth_corr = advanced_correlation_analyzer.get_comprehensive_correlation_analysis('ETHUSDT')
        btc_corr = advanced_correlation_analyzer.get_comprehensive_correlation_analysis('BTCUSDT')
        
        print(f"\nüìä ETHUSDT –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏:")
        print(f"   BTC –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è: {eth_corr.get('btc_correlation', 0):.4f}")
        print(f"   –†–∞–Ω–≥ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏: {eth_corr.get('volatility_rank', 0)}")
        print(f"   –°–∏–ª–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏: {eth_corr.get('correlation_strength', 'unknown')}")
        
        print(f"\nüìä BTCUSDT –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏:")
        print(f"   ETH –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è: {btc_corr.get('eth_correlation', 0):.4f}")
        print(f"   –†–∞–Ω–≥ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏: {btc_corr.get('volatility_rank', 0)}")
        print(f"   –°–∏–ª–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏: {btc_corr.get('correlation_strength', 'unknown')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
        from correlation_analyzer import CorrelationAnalyzer
        basic_analyzer = CorrelationAnalyzer()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
        for i in range(20):
            eth_price = 3700.0 * (1 + (i * 0.001 - 0.01))
            btc_price = 45000.0 * (1 + (i * 0.002 - 0.02))
            basic_analyzer.add_price_data('ETHUSDT', eth_price, timestamp + i * 1000)
            basic_analyzer.add_price_data('BTCUSDT', btc_price, timestamp + i * 1000)
        
        basic_corr = basic_analyzer.calculate_correlations('ETHUSDT')
        print(f"\nüìä –ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä:")
        print(f"   –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–∏: {basic_corr}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    asyncio.run(test_correlations_simple()) 