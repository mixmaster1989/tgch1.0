#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π
"""

import asyncio
import time
from correlation_analyzer import CorrelationAnalyzer

def test_correlation_quick():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π"""
    print("üîó –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –ö–û–†–†–ï–õ–Ø–¶–ò–ô")
    print("=" * 30)
    
    try:
        analyzer = CorrelationAnalyzer()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        timestamp = int(time.time() * 1000)
        
        # BTCUSDT
        analyzer.add_price_data('BTCUSDT', 115000.0, timestamp)
        analyzer.add_price_data('BTCUSDT', 115100.0, timestamp + 1000)
        analyzer.add_price_data('BTCUSDT', 115200.0, timestamp + 2000)
        
        # ETHUSDT
        analyzer.add_price_data('ETHUSDT', 3670.0, timestamp)
        analyzer.add_price_data('ETHUSDT', 3675.0, timestamp + 1000)
        analyzer.add_price_data('ETHUSDT', 3680.0, timestamp + 2000)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏
        btc_corr = analyzer.calculate_correlations('BTCUSDT')
        eth_corr = analyzer.calculate_correlations('ETHUSDT')
        
        print(f"üìä BTCUSDT –¥–∞–Ω–Ω—ã–µ: {len(analyzer.price_data['BTCUSDT'])} —Ç–æ—á–µ–∫")
        print(f"üìä ETHUSDT –¥–∞–Ω–Ω—ã–µ: {len(analyzer.price_data['ETHUSDT'])} —Ç–æ—á–µ–∫")
        
        if btc_corr and eth_corr:
            print("‚úÖ –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç!")
            return True
        else:
            print("‚ùå –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return False

if __name__ == "__main__":
    test_correlation_quick() 