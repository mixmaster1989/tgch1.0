#!/usr/bin/env python3
"""
–ü–†–û–í–ï–†–ö–ê –ö–û–ú–ò–°–°–ò–ò –ú–ï–ô–ö–ï–†–ê!
–ü–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏ TRUMP
"""

from mex_api import MexAPI
import json
from datetime import datetime

print("üîç –ü–†–û–í–ï–†–ö–ê –ö–û–ú–ò–°–°–ò–ò –ú–ï–ô–ö–ï–†–ê!")
print("=" * 40)

try:
    # –°–æ–∑–¥–∞–µ–º API –æ–±—ä–µ–∫—Ç
    api = MexAPI()
    print("‚úÖ API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ä–¥–µ—Ä–∞
    print("üìã –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ä–¥–µ—Ä–∞...")
    try:
        with open('trump_maker_order.json', 'r') as f:
            order_data = json.load(f)
        
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ä–¥–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
        print(f"   üÜî –û—Ä–¥–µ—Ä: {order_data['order_id']}")
        print(f"   üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {order_data['quantity']}")
        print(f"   üí∞ –¶–µ–Ω–∞: ${order_data['price']}")
        print(f"   üíµ –û–∂–∏–¥–∞–µ–º–∞—è –≤—ã—Ä—É—á–∫–∞: ${order_data['expected_revenue']}")
        
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª trump_maker_order.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ä–¥–µ—Ä–∞ TRUMP...")
        order_data = None
    
    # 2. –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ –æ—Ä–¥–µ—Ä–∞
    print(f"\nüìä –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –æ—Ä–¥–µ—Ä–∞...")
    
    if order_data:
        order_id = order_data['order_id']
        orders = api.get_order_history('TRUMPUSDT', limit=10)
    else:
        # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ä–¥–µ—Ä–∞ TRUMP
        orders = api.get_order_history('TRUMPUSDT', limit=10)
        order_id = None
    
    if not orders:
        print("‚ùå –ù–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ä–¥–µ—Ä–æ–≤ TRUMP")
        exit()
    
    # –ò—â–µ–º –∏—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã–π SELL –æ—Ä–¥–µ—Ä
    executed_sell = None
    for order in orders:
        if (order.get('side') == 'SELL' and 
            order.get('status') == 'FILLED' and
            (order_id is None or order.get('orderId') == order_id)):
            executed_sell = order
            break
    
    if not executed_sell:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∏—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã–π SELL –æ—Ä–¥–µ—Ä")
        exit()
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∏—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –æ—Ä–¥–µ—Ä:")
    print(f"   üÜî ID: {executed_sell.get('orderId', 'N/A')}")
    print(f"   üìä –°—Ç–æ—Ä–æ–Ω–∞: {executed_sell.get('side', 'N/A')}")
    print(f"   üìà –°—Ç–∞—Ç—É—Å: {executed_sell.get('status', 'N/A')}")
    print(f"   üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {executed_sell.get('executedQty', 'N/A')}")
    print(f"   üí∞ –¶–µ–Ω–∞: ${executed_sell.get('price', 'N/A')}")
    
    # 3. –ê–ù–ê–õ–ò–ó –ö–û–ú–ò–°–°–ò–ò –ú–ï–ô–ö–ï–†–ê
    print(f"\nüí∞ –ê–ù–ê–õ–ò–ó –ö–û–ú–ò–°–°–ò–ò –ú–ï–ô–ö–ï–†–ê:")
    print("=" * 50)
    
    # –î–∞–Ω–Ω—ã–µ –æ—Ä–¥–µ—Ä–∞
    executed_qty = float(executed_sell.get('executedQty', 0))
    executed_price = float(executed_sell.get('price', 0))
    cummulative_quote_qty = float(executed_sell.get('cummulativeQuoteQty', 0))
    
    # –†–∞—Å—á–µ—Ç—ã
    expected_revenue = executed_qty * executed_price
    actual_revenue = cummulative_quote_qty
    
    print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {executed_qty}")
    print(f"üí∞ –¶–µ–Ω–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è: ${executed_price}")
    print(f"üíµ –û–∂–∏–¥–∞–µ–º–∞—è –≤—ã—Ä—É—á–∫–∞: ${expected_revenue:.6f}")
    print(f"üíµ –§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –≤—ã—Ä—É—á–∫–∞: ${actual_revenue:.6f}")
    
    # –†–∞–∑–Ω–∏—Ü–∞ (–∫–æ–º–∏—Å—Å–∏—è)
    difference = expected_revenue - actual_revenue
    if difference > 0:
        print(f"üìâ –†–∞–∑–Ω–∏—Ü–∞ (–∫–æ–º–∏—Å—Å–∏—è): ${difference:.6f}")
    else:
        print(f"üìà –†–∞–∑–Ω–∏—Ü–∞ (–±–æ–Ω—É—Å): ${abs(difference):.6f}")
    
    # –ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏
    if expected_revenue > 0:
        fee_percent = (difference / expected_revenue) * 100
        print(f"üìä –ö–æ–º–∏—Å—Å–∏—è: {fee_percent:.4f}%")
    
    # 4. –°–†–ê–í–ù–ï–ù–ò–ï –° –†–´–ù–û–ß–ù–´–ú–ò –û–†–î–ï–†–ê–ú–ò
    print(f"\nüîç –°–†–ê–í–ù–ï–ù–ò–ï –° –†–´–ù–û–ß–ù–´–ú–ò –û–†–î–ï–†–ê–ú–ò:")
    print("=" * 50)
    
    # –ò—â–µ–º —Ä—ã–Ω–æ—á–Ω—ã–µ –æ—Ä–¥–µ—Ä–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    market_orders = []
    for order in orders:
        if (order.get('type') == 'MARKET' and 
            order.get('side') == 'SELL' and
            order.get('status') == 'FILLED'):
            market_orders.append(order)
    
    if market_orders:
        print(f"üìù –ù–∞–π–¥–µ–Ω–æ —Ä—ã–Ω–æ—á–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤: {len(market_orders)}")
        
        for i, market_order in enumerate(market_orders[:3], 1):  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 3
            mqty = float(market_order.get('executedQty', 0))
            mprice = float(market_order.get('price', 0))
            mrevenue = float(market_order.get('cummulativeQuoteQty', 0))
            
            expected_market = mqty * mprice
            market_fee = expected_market - mrevenue
            
            print(f"\nüî∏ –†—ã–Ω–æ—á–Ω—ã–π –æ—Ä–¥–µ—Ä {i}:")
            print(f"   üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {mqty}")
            print(f"   üí∞ –¶–µ–Ω–∞: ${mprice}")
            print(f"   üíµ –û–∂–∏–¥–∞–µ–º–∞—è: ${expected_market:.6f}")
            print(f"   üíµ –§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è: ${mrevenue:.6f}")
            print(f"   üìâ –ö–æ–º–∏—Å—Å–∏—è: ${market_fee:.6f}")
            
            if expected_market > 0:
                market_fee_percent = (market_fee / expected_market) * 100
                print(f"   üìä –ö–æ–º–∏—Å—Å–∏—è: {market_fee_percent:.4f}%")
    else:
        print("‚ùå –ù–µ—Ç —Ä—ã–Ω–æ—á–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è")
    
    # 5. –ò–¢–û–ì–ò
    print(f"\nüìä –ò–¢–û–ì–ò –ê–ù–ê–õ–ò–ó–ê –ö–û–ú–ò–°–°–ò–ò:")
    print("=" * 50)
    
    if 'fee_percent' in locals():
        if fee_percent < 0.05:
            print(f"üü¢ –ú–ï–ô–ö–ï–† –û–†–î–ï–†: –ù–∏–∑–∫–∞—è –∫–æ–º–∏—Å—Å–∏—è {fee_percent:.4f}%")
        elif fee_percent < 0.1:
            print(f"üü° –ú–ï–ô–ö–ï–† –û–†–î–ï–†: –°—Ä–µ–¥–Ω—è—è –∫–æ–º–∏—Å—Å–∏—è {fee_percent:.4f}%")
        else:
            print(f"üî¥ –ú–ï–ô–ö–ï–† –û–†–î–ï–†: –í—ã—Å–æ–∫–∞—è –∫–æ–º–∏—Å—Å–∏—è {fee_percent:.4f}%")
    
    print(f"üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {'–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–π–∫–µ—Ä –æ—Ä–¥–µ—Ä–∞' if 'fee_percent' in locals() and fee_percent < 0.1 else '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∏—Å—Å–∏–π'}")
    
except Exception as e:
    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()

print("\nüèÅ –ê–Ω–∞–ª–∏–∑ –∫–æ–º–∏—Å—Å–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω") 