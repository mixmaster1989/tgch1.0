#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤ –≤ main.py
"""

import asyncio
import logging
import threading
from scalper_manager import ScalperManager, get_scalper_protected_balance

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def start_scalper_manager():
    """–ó–∞–ø—É—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤...")
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä
        manager = ScalperManager()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
        logger.info("üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤:")
        logger.info(f"   –ó–∞—â–∏—Ç–∞ –±–∞–ª–∞–Ω—Å–∞: ${manager.min_usdc_balance_after_scalper:.2f} USDC")
        logger.info(f"   –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: ${manager.position_size_usdc:.2f} USDC")
        logger.info(f"   –ú–∞–∫—Å–∏–º—É–º —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤: {manager.max_instances_per_symbol} –Ω–∞ —Å–∏–º–≤–æ–ª")
        logger.info(f"   –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: {manager.scan_interval} —Å–µ–∫")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        def run_manager():
            asyncio.run(manager.run())
        
        manager_thread = threading.Thread(target=run_manager, daemon=True)
        manager_thread.start()
        
        logger.info("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤ –∑–∞–ø—É—â–µ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ")
        
        return manager
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤: {e}")
        return None

def get_scalper_status():
    """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤"""
    try:
        manager = ScalperManager()
        status = manager.get_manager_status()
        
        logger.info("üìä –°—Ç–∞—Ç—É—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤:")
        logger.info(f"   BTC –∞–∫—Ç–∏–≤–Ω—ã—Ö: {status.get('btc_active', 0)}")
        logger.info(f"   BTC –∑–∞—Å—Ç—Ä—è–≤—à–∏—Ö: {status.get('btc_stuck', 0)}")
        logger.info(f"   ETH –∞–∫—Ç–∏–≤–Ω—ã—Ö: {status.get('eth_active', 0)}")
        logger.info(f"   ETH –∑–∞—Å—Ç—Ä—è–≤—à–∏—Ö: {status.get('eth_stuck', 0)}")
        logger.info(f"   –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ: {status.get('total_created', 0)}")
        logger.info(f"   –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: ${status.get('total_profit', 0):.3f}")
        logger.info(f"   –ë–∞–ª–∞–Ω—Å USDC: ${status.get('usdc_balance', 0):.2f}")
        
        return status
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {e}")
        return {}

def check_scalper_balance():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—â–∏—â–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å –¥–ª—è —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤"""
    try:
        protected_balance = get_scalper_protected_balance()
        
        logger.info("üõ°Ô∏è –ó–∞—â–∏—â–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å –¥–ª—è —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤:")
        logger.info(f"   –î–æ—Å—Ç—É–ø–Ω–æ: ${protected_balance:.2f} USDC")
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π
        manager = ScalperManager()
        max_positions = int(protected_balance / manager.position_size_usdc)
        logger.info(f"   –ú–∞–∫—Å–∏–º—É–º –ø–æ–∑–∏—Ü–∏–π: {max_positions}")
        
        return protected_balance, max_positions
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞: {e}")
        return 0.0, 0

# –ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ main.py
def integrate_with_main():
    """–ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤ –≤ main.py"""
    
    print("üîß –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ú–ï–ù–ï–î–ñ–ï–†–ê –°–ö–ê–õ–¨–ü–ï–†–û–í –í MAIN.PY")
    print("=" * 60)
    
    # 1. –ó–∞–ø—É—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤
    print("\n1Ô∏è‚É£ –ó–∞–ø—É—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤...")
    manager = start_scalper_manager()
    
    if manager:
        print("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞")
        return
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞...")
    protected_balance, max_positions = check_scalper_balance()
    
    # 3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    print("\n3Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞...")
    status = get_scalper_status()
    
    # 4. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –º–æ–¥—É–ª—è–º–∏
    print("\n4Ô∏è‚É£ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –º–æ–¥—É–ª—è–º–∏...")
    
    # –ü—Ä–∏–º–µ—Ä –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ balance_monitor.py
    print("   üìù –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è balance_monitor.py:")
    print("   - –£–≤–µ–ª–∏—á–∏—Ç—å –∑–∞—â–∏—Ç—É –±–∞–ª–∞–Ω—Å–∞ –¥–æ $20 USDC")
    print("   - –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤")
    
    # –ü—Ä–∏–º–µ—Ä –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ btc_scalper.py –∏ eth_scalper.py
    print("   üìù –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤:")
    print("   - –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")
    print("   - –ü–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å—ã –≤ –º–µ–Ω–µ–¥–∂–µ—Ä")
    
    print("\n‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ main.py
def example_main_integration():
    """–ü—Ä–∏–º–µ—Ä –∫–∞–∫ —ç—Ç–æ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –≤ main.py"""
    
    print("\nüìã –ü–†–ò–ú–ï–† –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –í MAIN.PY")
    print("=" * 40)
    
    print("""
# –í main.py –¥–æ–±–∞–≤–∏—Ç—å:

from scalper_manager import ScalperManager, get_scalper_protected_balance

def start_scalper_manager():
    \"\"\"–ó–∞–ø—É—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ\"\"\"
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤...")
        
        manager = ScalperManager()
        
        def run_manager():
            asyncio.run(manager.run())
        
        manager_thread = threading.Thread(target=run_manager, daemon=True)
        manager_thread.start()
        
        logger.info("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤ –∑–∞–ø—É—â–µ–Ω")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {e}")

# –í —Ñ—É–Ω–∫—Ü–∏–∏ main() –¥–æ–±–∞–≤–∏—Ç—å:
def main():
    # ... —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ ...
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤
    start_scalper_manager()
    
    # ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ ...
""")

if __name__ == "__main__":
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    integrate_with_main()
    
    # –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞ –¥–ª—è main.py
    example_main_integration()
    
    print("\nüéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä: python3 test_scalper_manager.py")
    print("2. –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –≤ main.py")
    print("3. –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–∫–∞–ª—å–ø–µ—Ä—ã")
    print("4. –û–±–Ω–æ–≤–∏—Ç—å –∑–∞—â–∏—Ç—É –±–∞–ª–∞–Ω—Å–∞ –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö")







