#!/usr/bin/env python3
"""
–ü–†–û–í–ï–†–ö–ê –ê–ö–ö–ê–£–ù–¢–ê!
–ù–∞–π–¥–µ–º –≤—Å–µ –º–æ–Ω–µ—Ç—ã –∏ LUMA
"""

from mex_api import MexAPI
import json

print("üîç –ü–†–û–í–ï–†–ö–ê –ê–ö–ö–ê–£–ù–¢–ê MEXC")
print("=" * 40)

try:
    # –°–æ–∑–¥–∞–µ–º API –æ–±—ä–µ–∫—Ç
    api = MexAPI()
    print("‚úÖ API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
    print("üìä –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞...")
    account_info = api.get_account_info()
    
    if not account_info or 'balances' not in account_info:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å")
        exit()
    
    balances = account_info['balances']
    print(f"üí∞ –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–æ–≤: {len(balances)}")
    
    # –ò—â–µ–º –≤—Å–µ –Ω–µ–Ω—É–ª–µ–≤—ã–µ –±–∞–ª–∞–Ω—Å—ã
    non_zero_balances = []
    total_usdt_value = 0.0
    
    for balance in balances:
        free = float(balance['free'])
        locked = float(balance['locked'])
        total = free + locked
        
        if total > 0:
            asset = balance['asset']
            non_zero_balances.append({
                'asset': asset,
                'free': free,
                'locked': locked,
                'total': total
            })
    
    print(f"\nüìà –ù–µ–Ω—É–ª–µ–≤—ã–µ –±–∞–ª–∞–Ω—Å—ã ({len(non_zero_balances)}):")
    print("-" * 60)
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é
    non_zero_balances.sort(key=lambda x: x['total'], reverse=True)
    
    for balance in non_zero_balances:
        asset = balance['asset']
        free = balance['free']
        locked = balance['locked']
        total = balance['total']
        
        # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É –≤ USDT
        if asset == 'USDT':
            price = 1.0
            usdt_value = total
        elif asset == 'USDC':
            price = 1.0
            usdt_value = total
        else:
            try:
                symbol = f"{asset}USDT"
                ticker = api.get_ticker_price(symbol)
                if ticker and 'price' in ticker:
                    price = float(ticker['price'])
                    usdt_value = total * price
                else:
                    price = 0
                    usdt_value = 0
            except:
                price = 0
                usdt_value = 0
        
        total_usdt_value += usdt_value
        
        print(f"üí∞ {asset:>8}: {total:>15.8f} (${usdt_value:>10.2f})")
        if locked > 0:
            print(f"   üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: {locked:>15.8f}")
    
    print("-" * 60)
    print(f"üíµ –û–ë–©–ê–Ø –°–¢–û–ò–ú–û–°–¢–¨: ${total_usdt_value:.2f}")
    
    # –ò—â–µ–º LUMA –æ—Ç–¥–µ–ª—å–Ω–æ
    print(f"\nüîç –ü–û–ò–°–ö LUMA:")
    luma_found = False
    
    for balance in non_zero_balances:
        if balance['asset'] == 'LUMA':
            luma_found = True
            luma_total = balance['total']
            
            # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É LUMA
            ticker = api.get_ticker_price('LUMAUSDT')
            if ticker and 'price' in ticker:
                luma_price = float(ticker['price'])
                luma_usdt_value = luma_total * luma_price
                
                print(f"üö® LUMA –ù–ê–ô–î–ï–ù!")
                print(f"   üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {luma_total}")
                print(f"   üí∞ –¶–µ–Ω–∞: ${luma_price}")
                print(f"   üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${luma_usdt_value:.4f}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –æ—Ä–¥–µ—Ä–æ–≤
                print(f"\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –æ—Ä–¥–µ—Ä–æ–≤ LUMAUSDT...")
                try:
                    orders = api.get_order_history('LUMAUSDT', limit=10)
                    if orders:
                        print(f"   üìù –ù–∞–π–¥–µ–Ω–æ –æ—Ä–¥–µ—Ä–æ–≤: {len(orders)}")
                        
                        # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π BUY –æ—Ä–¥–µ—Ä
                        for order in orders:
                            if order.get('side') == 'BUY':
                                print(f"   üü¢ –ü–û–°–õ–ï–î–ù–ò–ô –ü–û–ö–£–ü–ö–ê:")
                                print(f"      üÜî –û—Ä–¥–µ—Ä: {order.get('orderId', 'N/A')}")
                                print(f"      üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {order.get('executedQty', 'N/A')}")
                                print(f"      üí∞ –¶–µ–Ω–∞: ${order.get('price', 'N/A')}")
                                print(f"      üíµ –°—É–º–º–∞: ${order.get('cummulativeQuoteQty', 'N/A')}")
                                print(f"      ‚è∞ –í—Ä–µ–º—è: {order.get('time', 'N/A')}")
                                break
                    else:
                        print(f"   ‚ùå –ò—Å—Ç–æ—Ä–∏—è –æ—Ä–¥–µ—Ä–æ–≤ –ø—É—Å—Ç–∞")
                except Exception as e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏: {e}")
            else:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É LUMA")
    
    if not luma_found:
        print("‚ùå LUMA –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–ª–∞–Ω—Å–µ")
        
except Exception as e:
    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()

print("\nüèÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞") 