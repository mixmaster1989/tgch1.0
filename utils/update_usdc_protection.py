#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞—â–∏—Ç—ã USDC –≤–æ –≤—Å–µ—Ö –º–æ–¥—É–ª—è—Ö
–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∑–∞—â–∏—Ç—É –±–∞–ª–∞–Ω—Å–∞ –¥–æ $20 USDC –¥–ª—è —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤
"""

import os
import re
from pathlib import Path

def update_file_protection(file_path: str, old_value: str, new_value: str, description: str):
    """–û–±–Ω–æ–≤–∏—Ç—å –∑–∞—â–∏—Ç—É –±–∞–ª–∞–Ω—Å–∞ –≤ —Ñ–∞–π–ª–µ"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        if old_value in content:
            new_content = content.replace(old_value, new_value)
            
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(new_content)
            
            print(f"‚úÖ {description}: {file_path}")
            return True
        else:
            print(f"‚ö†Ô∏è  {description}: {file_path} - –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∑–∞–º–µ–Ω—ã")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {file_path}: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
    print("üõ°Ô∏è –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–©–ò–¢–´ USDC –í–û –í–°–ï–• –ú–û–î–£–õ–Ø–•")
    print("=" * 60)
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    files_to_update = [
        {
            'path': 'balance_monitor.py',
            'old': 'self.min_usdc_balance_after_purchase = 10.0  # –ú–∏–Ω–∏–º—É–º $10 USDC –¥–æ–ª–∂–Ω–æ –æ—Å—Ç–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏',
            'new': 'self.min_usdc_balance_after_purchase = 20.0  # –ú–∏–Ω–∏–º—É–º $20 USDC –¥–æ–ª–∂–Ω–æ –æ—Å—Ç–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ (–∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤)',
            'description': '–ú–æ–Ω–∏—Ç–æ—Ä –±–∞–ª–∞–Ω—Å–∞ - –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫–∏ BTC/ETH'
        },
        {
            'path': 'active_50_50_balancer.py',
            'old': 'self.min_usdc_balance_after_operation = 10.0  # –ú–∏–Ω–∏–º—É–º $10 USDC –¥–æ–ª–∂–Ω–æ –æ—Å—Ç–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–∏',
            'new': 'self.min_usdc_balance_after_operation = 20.0  # –ú–∏–Ω–∏–º—É–º $20 USDC –¥–æ–ª–∂–Ω–æ –æ—Å—Ç–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤)',
            'description': '–ê–∫—Ç–∏–≤–Ω—ã–π –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ 50/50'
        },
        {
            'path': 'stablecoin_balancer.py',
            'old': 'min_btc_requirement = 12.0  # –ú–∏–Ω–∏–º—É–º –¥–ª—è BTC\n        min_eth_requirement = 5.0   # –ú–∏–Ω–∏–º—É–º –¥–ª—è ETH',
            'new': 'min_btc_requirement = 12.0  # –ú–∏–Ω–∏–º—É–º –¥–ª—è BTC\n        min_eth_requirement = 5.0   # –ú–∏–Ω–∏–º—É–º –¥–ª—è ETH\n        min_scalper_protection = 20.0  # –ó–∞—â–∏—Ç–∞ $20 USDC –¥–ª—è —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤',
            'description': '–ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ —Å—Ç–µ–π–±–ª–∫–æ–∏–Ω–æ–≤ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞—â–∏—Ç—ã —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤'
        }
    ]
    
    updated_count = 0
    total_count = len(files_to_update)
    
    for file_info in files_to_update:
        if os.path.exists(file_info['path']):
            if update_file_protection(
                file_info['path'], 
                file_info['old'], 
                file_info['new'], 
                file_info['description']
            ):
                updated_count += 1
        else:
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_info['path']}")
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –û–ë–ù–û–í–õ–ï–ù–ò–Ø:")
    print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {updated_count}/{total_count}")
    
    if updated_count == total_count:
        print("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –±—ã–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
    
    print(f"\nüõ°Ô∏è –ù–û–í–ê–Ø –ó–ê–©–ò–¢–ê USDC:")
    print(f"   –ú–∏–Ω–∏–º—É–º $20 USDC –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è —Å–∫–∞–ª—å–ø–µ—Ä–æ–≤")
    print(f"   –í—Å–µ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫–∏ –∏ –∑–∞–∫—É–ø—â–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
    print(f"   –°–∫–∞–ª—å–ø–µ—Ä—ã –∑–∞—â–∏—â–µ–Ω—ã –æ—Ç –∏—Å—á–µ—Ä–ø–∞–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞")

if __name__ == "__main__":
    main()







