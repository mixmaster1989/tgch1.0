#!/usr/bin/env python3
"""
–†—ã–Ω–æ—á–Ω–∞—è –ø–æ–∫—É–ø–∫–∞ USDC –∑–∞ 50 USDT
"""

from mex_api import MexAPI
import time
import logging
import requests
from datetime import datetime
from config import TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class MarketUSDCBuyer:
    def __init__(self):
        self.mex_api = MexAPI()
        self.bot_token = TELEGRAM_BOT_TOKEN
        self.chat_id = TELEGRAM_CHAT_ID
        
    def send_telegram_message(self, message: str):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
        url = f"https://api.telegram.org/bot{self.bot_token}/sendMessage"
        data = {
            'chat_id': self.chat_id,
            'text': message,
            'parse_mode': 'HTML'
        }
        try:
            response = requests.post(url, data=data)
            return response.json()
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")
            return None
    
    def cancel_order(self, order_id: str, symbol: str = 'USDCUSDT'):
        """–û—Ç–º–µ–Ω–∏—Ç—å –æ—Ä–¥–µ—Ä"""
        try:
            logger.info(f"üîÑ –û—Ç–º–µ–Ω—è—é –ª–∏–º–∏—Ç–Ω—ã–π –æ—Ä–¥–µ—Ä {order_id}...")
            result = self.mex_api.cancel_order(symbol, order_id)
            logger.info(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–º–µ–Ω—ã: {result}")
            return result
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –æ—Ä–¥–µ—Ä–∞: {e}")
            return None
    
    def get_current_price(self, symbol: str = 'USDCUSDT'):
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ä—ã–Ω–æ—á–Ω—É—é —Ü–µ–Ω—É"""
        try:
            price_info = self.mex_api.get_ticker_price(symbol)
            if 'price' in price_info:
                return float(price_info['price'])
            return None
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã: {e}")
            return None
    
    def market_buy_usdc(self, usdt_amount: float, symbol: str = 'USDCUSDT'):
        """–†—ã–Ω–æ—á–Ω–∞—è –ø–æ–∫—É–ø–∫–∞ USDC –∑–∞ USDT"""
        try:
            logger.info(f"üöÄ –†—ã–Ω–æ—á–Ω–∞—è –ø–æ–∫—É–ø–∫–∞ USDC –Ω–∞ {usdt_amount} USDT...")
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
            current_price = self.get_current_price(symbol)
            if not current_price:
                logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É")
                return None
            
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ USDC –∏ –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ 2 –∑–Ω–∞–∫–æ–≤
            estimated_usdc = usdt_amount / current_price
            rounded_usdc = round(estimated_usdc, 2)  # –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
            
            logger.info(f"üí∞ –î–µ—Ç–∞–ª–∏ —Ä—ã–Ω–æ—á–Ω–æ–π –ø–æ–∫—É–ø–∫–∏:")
            logger.info(f"   –°—É–º–º–∞ USDT: {usdt_amount}")
            logger.info(f"   –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {current_price:.4f} USDT")
            logger.info(f"   –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ USDC: {estimated_usdc:.4f}")
            logger.info(f"   –û–∫—Ä—É–≥–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ USDC: {rounded_usdc:.2f}")
            
            # –†–∞–∑–º–µ—â–∞–µ–º —Ä—ã–Ω–æ—á–Ω—ã–π –æ—Ä–¥–µ—Ä
            order = self.mex_api.place_order(
                symbol=symbol,
                side='BUY',
                quantity=rounded_usdc,
                price=None  # None = —Ä—ã–Ω–æ—á–Ω—ã–π –æ—Ä–¥–µ—Ä
            )
            
            if 'orderId' in order:
                logger.info(f"‚úÖ –†—ã–Ω–æ—á–Ω—ã–π –æ—Ä–¥–µ—Ä —Å–æ–∑–¥–∞–Ω: {order['orderId']}")
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
                message = (
                    f"üöÄ <b>–†–´–ù–û–ß–ù–´–ô –û–†–î–ï–† –†–ê–ó–ú–ï–©–ï–ù</b>\n\n"
                    f"üìã <b>–î–µ—Ç–∞–ª–∏:</b>\n"
                    f"üÜî ID: <code>{order['orderId']}</code>\n"
                    f"üí± –ü–∞—Ä–∞: {symbol}\n"
                    f"üí∞ –°—É–º–º–∞: {usdt_amount} USDT\n"
                    f"üìà –¢–∏–ø: –†–´–ù–û–ß–ù–´–ô\n"
                    f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {rounded_usdc:.2f} USDC\n"
                    f"üíµ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {current_price:.4f} USDT\n\n"
                    f"‚ö° –ò—Å–ø–æ–ª–Ω–µ–Ω–∏–µ: –ú–ì–ù–û–í–ï–ù–ù–û–ï\n"
                    f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}"
                )
                self.send_telegram_message(message)
                
                return order
            else:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä—ã–Ω–æ—á–Ω–æ–≥–æ –æ—Ä–¥–µ—Ä–∞: {order}")
                return None
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ä—ã–Ω–æ—á–Ω–æ–π –ø–æ–∫—É–ø–∫–∏: {e}")
            return None
    
    def get_balances(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –±–∞–ª–∞–Ω—Å—ã"""
        try:
            account_info = self.mex_api.get_account_info()
            usdt_balance = 0
            usdc_balance = 0
            
            for balance in account_info.get('balances', []):
                if balance['asset'] == 'USDT':
                    usdt_balance = float(balance['free'])
                elif balance['asset'] == 'USDC':
                    usdc_balance = float(balance['free'])
            
            return usdt_balance, usdc_balance
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤: {e}")
            return 0, 0

def main():
    buyer = MarketUSDCBuyer()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã
    usdt_balance, usdc_balance = buyer.get_balances()
    logger.info(f"üí∞ –ù–∞—á–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã:")
    logger.info(f"   USDT: {usdt_balance:.4f}")
    logger.info(f"   USDC: {usdc_balance:.4f}")
    
    # 1. –û—Ç–º–µ–Ω—è–µ–º –ª–∏–º–∏—Ç–Ω—ã–π –æ—Ä–¥–µ—Ä
    limit_order_id = "C02__582575249619558402067"
    buyer.cancel_order(limit_order_id)
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–º–µ–Ω—ã
    time.sleep(3)
    
    # 2. –†—ã–Ω–æ—á–Ω–∞—è –ø–æ–∫—É–ø–∫–∞ USDC –∑–∞ 50 USDT
    usdt_amount = 50.0
    market_order = buyer.market_buy_usdc(usdt_amount)
    
    if market_order:
        logger.info(f"‚úÖ –†—ã–Ω–æ—á–Ω—ã–π –æ—Ä–¥–µ—Ä —Ä–∞–∑–º–µ—â–µ–Ω: {market_order['orderId']}")
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã
        time.sleep(5)
        final_usdt, final_usdc = buyer.get_balances()
        
        final_message = (
            f"üéâ <b>–†–´–ù–û–ß–ù–ê–Ø –ü–û–ö–£–ü–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê</b>\n\n"
            f"‚úÖ –†—ã–Ω–æ—á–Ω—ã–π –æ—Ä–¥–µ—Ä –∏—Å–ø–æ–ª–Ω–µ–Ω\n"
            f"üí∞ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {usdt_amount} USDT ‚Üí USDC\n\n"
            f"üí∞ <b>–§–∏–Ω–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã:</b>\n"
            f"üíµ USDT: {final_usdt:.4f}\n"
            f"üíµ USDC: {final_usdc:.4f}\n\n"
            f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}"
        )
        buyer.send_telegram_message(final_message)
        
        logger.info(f"üí∞ –§–∏–Ω–∞–ª—å–Ω—ã–µ –±–∞–ª–∞–Ω—Å—ã:")
        logger.info(f"   USDT: {final_usdt:.4f}")
        logger.info(f"   USDC: {final_usdc:.4f}")
    else:
        error_message = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —Ä—ã–Ω–æ—á–Ω—ã–π –æ—Ä–¥–µ—Ä"
        buyer.send_telegram_message(error_message)

if __name__ == "__main__":
    main() 