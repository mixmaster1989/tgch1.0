#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ë–î –≤ comprehensive_data_manager
"""

import asyncio
import time
from comprehensive_data_manager import ComprehensiveDataManager

async def test_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ë–î"""
    print("üß™ –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ë–î –≤ comprehensive_data_manager...")
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä
    manager = ComprehensiveDataManager()
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä
        await manager.start()
        
        # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–∏–º–≤–æ–ª—ã –≤ WebSocket
        await manager.subscribe_multiple_symbols(['BTCUSDT', 'ETHUSDT'])
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ —á—Ç–æ–±—ã WebSocket –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è
        await asyncio.sleep(5)
        
        print("‚è≥ –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ 60 —Å–µ–∫—É–Ω–¥...")
        await asyncio.sleep(60)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ë–î
        print("üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î...")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ü–µ–Ω—ã
        btc_prices = manager.load_historical_prices('BTCUSDT', 10)
        eth_prices = manager.load_historical_prices('ETHUSDT', 10)
        
        print(f"üí∞ BTC —Ü–µ–Ω—ã –≤ –ë–î: {len(btc_prices)} –∑–∞–ø–∏—Å–µ–π")
        print(f"üí∞ ETH —Ü–µ–Ω—ã –≤ –ë–î: {len(eth_prices)} –∑–∞–ø–∏—Å–µ–π")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Å–≤–µ—á–∏
        btc_klines = manager.load_historical_klines('BTCUSDT', '1h', 10)
        eth_klines = manager.load_historical_klines('ETHUSDT', '1h', 10)
        
        print(f"üìà BTC —Å–≤–µ—á–∏ –≤ –ë–î: {len(btc_klines)} –∑–∞–ø–∏—Å–µ–π")
        print(f"üìà ETH —Å–≤–µ—á–∏ –≤ –ë–î: {len(eth_klines)} –∑–∞–ø–∏—Å–µ–π")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
        print("‚ö° –ü—Ä–æ–≤–µ—Ä—è–µ–º Redis –∫—ç—à...")
        btc_cached_price = manager.redis_cache.get_price('BTCUSDT')
        eth_cached_price = manager.redis_cache.get_price('ETHUSDT')
        
        print(f"üí∞ BTC —Ü–µ–Ω–∞ –≤ –∫—ç—à–µ: {btc_cached_price}")
        print(f"üí∞ ETH —Ü–µ–Ω–∞ –≤ –∫—ç—à–µ: {eth_cached_price}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        market_data = manager.get_market_data()
        print(f"üìä –¢–µ–∫—É—â–∏–µ —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {len(market_data)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏
        candidates = manager.get_trading_candidates()
        print(f"üéØ –ö–∞–Ω–¥–∏–¥–∞—Ç—ã –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏: {len(candidates)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        print("‚úÖ –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        
    finally:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä
        await manager.stop()

if __name__ == "__main__":
    asyncio.run(test_integration()) 