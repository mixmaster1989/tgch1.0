#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–æ—â–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –Ω–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è
"""

import asyncio
import time
import numpy as np
from advanced_correlation_analyzer import AdvancedCorrelationAnalyzer, add_price_to_advanced_analyzer, get_advanced_correlation_analysis

def generate_test_data():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    base_time = int(time.time() * 1000)
    
    # BTC - –æ—Å–Ω–æ–≤–Ω–æ–π —Ç—Ä–µ–Ω–¥
    btc_trend = np.linspace(45000, 47000, 100) + np.random.normal(0, 200, 100)
    
    # ETH - –≤—ã—Å–æ–∫–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è —Å BTC
    eth_trend = btc_trend * 0.07 + 3000 + np.random.normal(0, 15, 100)
    
    # ADA - –Ω–∏–∑–∫–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è —Å BTC
    ada_trend = 0.5 + np.sin(np.linspace(0, 4*np.pi, 100)) * 0.1 + np.random.normal(0, 0.02, 100)
    
    # SOL - —Å—Ä–µ–¥–Ω—è—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è
    sol_trend = btc_trend * 0.04 + 100 + np.random.normal(0, 5, 100)
    
    # DOT - –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π —Ç—Ä–µ–Ω–¥
    dot_trend = 7 + np.cos(np.linspace(0, 6*np.pi, 100)) * 2 + np.random.normal(0, 0.3, 100)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    for i in range(100):
        timestamp = base_time + i * 60000  # –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        
        add_price_to_advanced_analyzer('BTCUSDT', btc_trend[i], timestamp)
        add_price_to_advanced_analyzer('ETHUSDT', eth_trend[i], timestamp)
        add_price_to_advanced_analyzer('ADAUSDT', ada_trend[i], timestamp)
        add_price_to_advanced_analyzer('SOLUSDT', sol_trend[i], timestamp)
        add_price_to_advanced_analyzer('DOTUSDT', dot_trend[i], timestamp)
    
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã")

def print_comprehensive_analysis(symbol: str):
    """–í—ã–≤–æ–¥ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"""
    print(f"\nüîç –†–ê–°–®–ò–†–ï–ù–ù–´–ô –ê–ù–ê–õ–ò–ó –ö–û–†–†–ï–õ–Ø–¶–ò–ô –î–õ–Ø {symbol}")
    print("=" * 80)
    
    analysis = get_advanced_correlation_analysis(symbol)
    
    # –†—ã–Ω–æ—á–Ω—ã–π —Ä–µ–∂–∏–º
    print(f"üìà –†–´–ù–û–ß–ù–´–ô –†–ï–ñ–ò–ú:")
    regime = analysis['market_regime']
    print(f"   –†–µ–∂–∏–º: {regime['regime']}")
    print(f"   –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è —Å BTC: {regime['btc_correlation']:.3f}")
    print(f"   –î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä—ã–Ω–∫–∞: {regime['market_dominance']:.3f}")
    print(f"   –°–∏–ª–∞ —Ç—Ä–µ–Ω–¥–∞: {regime['trend_strength']:.4f}")
    
    # –ë–∞–∑–æ–≤—ã–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏
    print(f"\nüîó –ë–ê–ó–û–í–´–ï –ö–û–†–†–ï–õ–Ø–¶–ò–ò:")
    correlations = analysis['basic_correlations']
    for asset, data in correlations.items():
        print(f"   {asset}: {data['correlation']:.3f} ({data['strength']}, {data['direction']})")
    
    # –ê–Ω–∞–ª–∏–∑ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏
    print(f"\nüìä –ê–ù–ê–õ–ò–ó –í–û–õ–ê–¢–ò–õ–¨–ù–û–°–¢–ò:")
    volatility = analysis['volatility_analysis']
    if volatility:
        print(f"   –¢–µ–∫—É—â–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å: {volatility.get('current_volatility', 0):.2%}")
        print(f"   –†–∞–Ω–≥ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏: {volatility.get('volatility_rank', 0)}")
        print(f"   –¢—Ä–µ–Ω–¥ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏: {volatility.get('volatility_trend', 'unknown')}")
        print(f"   –†–µ–∂–∏–º –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏: {volatility.get('volatility_regime', 'unknown')}")
    
    # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
    print(f"\nüéØ –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –î–ò–í–ï–†–°–ò–§–ò–ö–ê–¶–ò–ò:")
    opportunities = analysis['diversification_opportunities']
    for i, opp in enumerate(opportunities[:3], 1):
        print(f"   {i}. {opp['asset']}: {opp['correlation']:.3f} (score: {opp['diversification_score']:.3f})")
        print(f"      –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {opp['recommendation']}")
        print(f"      –ü—Ä–∏—á–∏–Ω–∞: {opp['reason']}")
    
    # –¢–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã
    print(f"\nüöÄ –¢–û–†–ì–û–í–´–ï –°–ò–ì–ù–ê–õ–´:")
    signals = analysis['trading_signals']
    if signals:
        for signal in signals:
            print(f"   {signal.signal_type}: {signal.reason}")
            print(f"      –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {signal.confidence:.2f}")
    else:
        print("   –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤")
    
    # –û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤
    print(f"\n‚ö†Ô∏è –û–¶–ï–ù–ö–ê –†–ò–°–ö–û–í:")
    risks = analysis['risk_assessment']
    print(f"   –û–±—â–∏–π —Ä–∏—Å–∫: {risks['overall_risk_score']:.3f}")
    print(f"   –†–∏—Å–∫ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏: {risks.get('concentration_risk', 0):.3f}")
    print(f"   –†–∏—Å–∫ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π: {risks.get('correlation_risk', 0):.3f}")
    print(f"   –†—ã–Ω–æ—á–Ω—ã–π —Ä–∏—Å–∫: {risks.get('market_risk', 0):.3f}")
    print(f"   –†–∏—Å–∫ –¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏: {risks.get('diversification_risk', 0):.3f}")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø–æ—Ä—Ç—Ñ–µ–ª—è
    print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –ü–û–†–¢–§–ï–õ–Ø:")
    recommendations = analysis['portfolio_recommendations']
    for rec in recommendations:
        print(f"   ‚Ä¢ {rec}")
    
    # –ê–ª–µ—Ä—Ç—ã –ø–æ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è–º
    print(f"\nüö® –ê–õ–ï–†–¢–´ –ü–û –ö–û–†–†–ï–õ–Ø–¶–ò–Ø–ú:")
    alerts = analysis['correlation_alerts']
    if alerts:
        for alert in alerts:
            severity_emoji = "üî¥" if alert['severity'] == 'high' else "üü°" if alert['severity'] == 'medium' else "üü¢"
            print(f"   {severity_emoji} {alert['message']}")
    else:
        print("   –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤")
    
    # –†—ã–Ω–æ—á–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã
    print(f"\nüß† –†–´–ù–û–ß–ù–´–ï –ò–ù–°–ê–ô–¢–´:")
    insights = analysis['market_insights']
    print(f"   –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏—è —Ä—ã–Ω–∫–∞: {insights['market_sentiment']}")
    print(f"   –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤: {insights['trend_analysis']}")
    
    if insights['correlation_insights']:
        print("   –ò–Ω—Å–∞–π—Ç—ã –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π:")
        for insight in insights['correlation_insights']:
            print(f"     ‚Ä¢ {insight}")
    
    if insights['risk_insights']:
        print("   –†–∏—Å–∫-–∏–Ω—Å–∞–π—Ç—ã:")
        for insight in insights['risk_insights']:
            print(f"     ‚Ä¢ {insight}")
    
    if insights['opportunity_insights']:
        print("   –ò–Ω—Å–∞–π—Ç—ã –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π:")
        for insight in insights['opportunity_insights']:
            print(f"     ‚Ä¢ {insight}")

def compare_with_old_analyzer():
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Å—Ç–∞—Ä—ã–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–º"""
    print(f"\nüìä –°–†–ê–í–ù–ï–ù–ò–ï –° –ë–ê–ó–û–í–´–ú –ê–ù–ê–õ–ò–ó–ê–¢–û–†–û–ú")
    print("=" * 80)
    
    # –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç
    print("üìã –°–¢–ê–†–´–ô –§–û–†–ú–ê–¢:")
    print("üîó –ö–û–†–†–ï–õ–Ø–¶–ò–ò ETH:")
    print("   BTC –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è: 0.0000")
    print("   ETH –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è: 0.0000")
    print("   –†–∞–Ω–≥ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏: 2")
    print("   –°–∏–ª–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏: weak")
    
    print(f"\nüöÄ –ù–û–í–´–ô –†–ê–°–®–ò–†–ï–ù–ù–´–ô –§–û–†–ú–ê–¢:")
    print("   ‚Ä¢ –†—ã–Ω–æ—á–Ω—ã–π —Ä–µ–∂–∏–º –∏ –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("   ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π —Å —Å–∏–ª–æ–π –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º")
    print("   ‚Ä¢ –ê–Ω–∞–ª–∏–∑ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏ –∏ —Ç—Ä–µ–Ω–¥–æ–≤")
    print("   ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    print("   ‚Ä¢ –¢–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π")
    print("   ‚Ä¢ –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤")
    print("   ‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
    print("   ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞–ª–µ—Ä—Ç–æ–≤")
    print("   ‚Ä¢ –†—ã–Ω–æ—á–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –¢–ï–°–¢ –†–ê–°–®–ò–†–ï–ù–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê–¢–û–†–ê –ö–û–†–†–ï–õ–Ø–¶–ò–ô")
    print("=" * 80)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    generate_test_data()
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º ETH
    print_comprehensive_analysis('ETHUSDT')
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º ADA (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è)
    print_comprehensive_analysis('ADAUSDT')
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Å—Ç–∞—Ä—ã–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–º
    compare_with_old_analyzer()
    
    print(f"\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("üéØ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤ 10 —Ä–∞–∑ –±–æ–ª—å—à–µ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏!")

if __name__ == "__main__":
    main() 