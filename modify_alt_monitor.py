#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ alt_monitor.py - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —É –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫–∞
"""

def modify_alt_monitor():
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open('alt_monitor.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫–∞ –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞
    import_line = "from active_50_50_balancer import Active5050Balancer\n"
    
    # –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–æ–≤
    lines = content.split('\n')
    insert_index = 0
    for i, line in enumerate(lines):
        if line.startswith('from post_sale_balancer import PostSaleBalancer'):
            insert_index = i + 1
            break
    
    lines.insert(insert_index, import_line)
    
    # –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –∫–ª–∞—Å—Å AltsMonitor
    modified_content = '\n'.join(lines)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫–∞ –≤ __init__
    init_pattern = '        self.anti_hype_filter = AntiHypeFilter()'
    replacement = '        self.anti_hype_filter = AntiHypeFilter()\n        self.balancer = Active5050Balancer()'
    modified_content = modified_content.replace(init_pattern, replacement)
    
    # –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é run_once - –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π
    old_buy_section = '''        # BUY phase —Å –∞–Ω—Ç–∏-—Ö–∞–π–ø —Ñ–∏–ª—å—Ç—Ä–æ–º
        balances = self._get_balances()
        usdt = balances.get('USDT', {}).get('free', 0.0)
        if usdt > 0.0:
            # 1% –æ—Ç –¥–µ–ø–æ–∑–∏—Ç–∞
            deposit_usd = self._get_total_deposit_usd()
            base_amount = deposit_usd * 0.01 if deposit_usd > 0 else 0.0
            # –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –∞–ª—å—Ç –∏–∑ —Å–ø–∏—Å–∫–∞
            for alt in TOP5_ALTS:
                if alt in balances:  # —É–∂–µ –¥–µ—Ä–∂–∏–º; –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                    continue
                sym = f"{alt}USDT"
                if not self.adv.get_symbol_rules(sym):
                    continue
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–Ω—Ç–∏-—Ö–∞–π–ø —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –∞–ª—å—Ç–∞
                alt_filter = self.anti_hype_filter.check_buy_permission(sym)
                if not alt_filter['allowed']:
                    logger.warning(f"üö´ {alt} –ø–æ–∫—É–ø–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞: {alt_filter['reason']}")
                    continue
                # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–∞
                planned_amount = base_amount * alt_filter['multiplier']
                # –ü–æ–∫—É–ø–∞–µ–º –º–∏–Ω–∏–º—É–º –ª–æ—Ç –µ—Å–ª–∏ 1% –º–µ–Ω—å—à–µ
                min_lot = self._get_min_lot_usdt(sym)
                spend_amount = max(planned_amount, min_lot)
                # –ö—ç–ø –ø–æ —Å–≤–æ–±–æ–¥–Ω–æ–º—É USDT
                spend_amount = min(spend_amount, usdt)
                if spend_amount < min_lot or spend_amount <= 0:
                    logger.info(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ USDT –¥–ª—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ª–æ—Ç–∞ {alt}: –Ω—É–∂–Ω–æ ${min_lot:.2f}, –µ—Å—Ç—å ${usdt:.2f}")
                    break
                logger.info(f"Buying {alt} for ${spend_amount:.2f} (1% –¥–µ–ø–æ–∑–∏—Ç–∞ √ó{alt_filter['multiplier']})")
                res = self._place_limit_buy_with_retries(sym, spend_amount, max_retries=3)
                logger.info(f"BUY result: {res}")
                if res and 'orderId' in res:
                    buy_message = (
                        f"<b>üõçÔ∏è –ü–û–ö–£–ü–ö–ê –ê–õ–¨–¢–ö–û–ò–ù–ê</b>\\n\\n"
                        f"üí± –ê–∫—Ç–∏–≤: {alt}\\n"
                        f"üíµ –°—É–º–º–∞: ${spend_amount:.2f}\\n"
                        f"üõ°Ô∏è –§–∏–ª—å—Ç—Ä: {alt_filter['reason']} √ó{alt_filter['multiplier']}\\n"
                        f"üÜî –û—Ä–¥–µ—Ä: <code>{res['orderId']}</code>\\n"
                        f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}"
                    )
                    PnLMonitor().send_telegram_message(buy_message)
                # —Å–æ–≤–µ—Ä—à–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –ø–æ–∫—É–ø–∫—É –∑–∞ —Ü–∏–∫–ª
                break'''
    
    new_buy_section = '''        # BUY phase —Å –∞–Ω—Ç–∏-—Ö–∞–π–ø —Ñ–∏–ª—å—Ç—Ä–æ–º –ò –ø—Ä–æ–≤–µ—Ä–∫–æ–π –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫–∞
        balances = self._get_balances()
        usdt = balances.get('USDT', {}).get('free', 0.0)
        if usdt > 0.0:
            # 1% –æ—Ç –¥–µ–ø–æ–∑–∏—Ç–∞
            deposit_usd = self._get_total_deposit_usd()
            base_amount = deposit_usd * 0.01 if deposit_usd > 0 else 0.0
            # –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –∞–ª—å—Ç –∏–∑ —Å–ø–∏—Å–∫–∞
            for alt in TOP5_ALTS:
                if alt in balances:  # —É–∂–µ –¥–µ—Ä–∂–∏–º; –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                    continue
                sym = f"{alt}USDT"
                if not self.adv.get_symbol_rules(sym):
                    continue
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–Ω—Ç–∏-—Ö–∞–π–ø —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –∞–ª—å—Ç–∞
                alt_filter = self.anti_hype_filter.check_buy_permission(sym)
                if not alt_filter['allowed']:
                    logger.warning(f"üö´ {alt} –ø–æ–∫—É–ø–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –∞–Ω—Ç–∏-—Ö–∞–π–ø —Ñ–∏–ª—å—Ç—Ä–æ–º: {alt_filter['reason']}")
                    continue
                # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª—å —Ñ–∏–ª—å—Ç—Ä–∞
                planned_amount = base_amount * alt_filter['multiplier']
                # –ü–æ–∫—É–ø–∞–µ–º –º–∏–Ω–∏–º—É–º –ª–æ—Ç –µ—Å–ª–∏ 1% –º–µ–Ω—å—à–µ
                min_lot = self._get_min_lot_usdt(sym)
                spend_amount = max(planned_amount, min_lot)
                # –ö—ç–ø –ø–æ —Å–≤–æ–±–æ–¥–Ω–æ–º—É USDT
                spend_amount = min(spend_amount, usdt)
                if spend_amount < min_lot or spend_amount <= 0:
                    logger.info(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ USDT –¥–ª—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ª–æ—Ç–∞ {alt}: –Ω—É–∂–Ω–æ ${min_lot:.2f}, –µ—Å—Ç—å ${usdt:.2f}")
                    break
                
                # üî• –ù–û–í–û–ï: –ü–†–û–í–ï–†–Ø–ï–ú –†–ê–ó–†–ï–®–ï–ù–ò–ï –£ –ë–ê–õ–ê–ù–°–ò–†–û–í–©–ò–ö–ê
                logger.info(f"üîç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —É –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É {alt}...")
                permission = self.balancer.check_purchase_permission(spend_amount, "ALTS")
                
                if not permission['allowed']:
                    logger.warning(f"üö´ –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –ø–æ–∫—É–ø–∫—É {alt}: {permission['reason']}")
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
                    blocked_message = (
                        f"üö´ <b>–ü–û–ö–£–ü–ö–ê {alt} –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–ê –ë–ê–õ–ê–ù–°–ò–†–û–í–©–ò–ö–û–ú</b>\\n\\n"
                        f"üíµ –°—É–º–º–∞: ${spend_amount:.2f}\\n"
                        f"üõ°Ô∏è –ê–Ω—Ç–∏-—Ö–∞–π–ø: {alt_filter['reason']} √ó{alt_filter['multiplier']}\\n\\n"
                        f"‚öñÔ∏è <b>–ü–†–ò–ß–ò–ù–ê –ë–õ–û–ö–ò–†–û–í–ö–ò:</b>\\n"
                        f"{permission['reason']}\\n\\n"
                        f"üìä <b>–¢–ï–ö–£–©–ò–ï –ü–†–û–ü–û–†–¶–ò–ò:</b>\\n"
                        f"–ê–ª—å—Ç—ã: {permission['current_alts_ratio']*100:.1f}%\\n"
                        f"BTC/ETH: {permission['current_btceth_ratio']*100:.1f}%\\n\\n"
                        f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}"
                    )
                    PnLMonitor().send_telegram_message(blocked_message)
                    continue
                
                logger.info(f"‚úÖ –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ —Ä–∞–∑—Ä–µ—à–∏–ª –ø–æ–∫—É–ø–∫—É {alt}: {permission['reason']}")
                
                logger.info(f"Buying {alt} for ${spend_amount:.2f} (1% –¥–µ–ø–æ–∑–∏—Ç–∞ √ó{alt_filter['multiplier']})")
                res = self._place_limit_buy_with_retries(sym, spend_amount, max_retries=3)
                logger.info(f"BUY result: {res}")
                if res and 'orderId' in res:
                    buy_message = (
                        f"<b>üõçÔ∏è –ü–û–ö–£–ü–ö–ê –ê–õ–¨–¢–ö–û–ò–ù–ê</b>\\n\\n"
                        f"üí± –ê–∫—Ç–∏–≤: {alt}\\n"
                        f"üíµ –°—É–º–º–∞: ${spend_amount:.2f}\\n"
                        f"üõ°Ô∏è –§–∏–ª—å—Ç—Ä: {alt_filter['reason']} √ó{alt_filter['multiplier']}\\n"
                        f"‚öñÔ∏è –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫: {permission['reason']}\\n"
                        f"üÜî –û—Ä–¥–µ—Ä: <code>{res['orderId']}</code>\\n"
                        f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}"
                    )
                    PnLMonitor().send_telegram_message(buy_message)
                # —Å–æ–≤–µ—Ä—à–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –ø–æ–∫—É–ø–∫—É –∑–∞ —Ü–∏–∫–ª
                break'''
    
    # –ó–∞–º–µ–Ω—è–µ–º —Å–µ–∫—Ü–∏—é –ø–æ–∫—É–ø–∫–∏
    modified_content = modified_content.replace(old_buy_section, new_buy_section)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    with open('alt_monitor.py', 'w', encoding='utf-8') as f:
        f.write(modified_content)
    
    print("‚úÖ alt_monitor.py –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω - –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —É –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫–∞")

if __name__ == "__main__":
    modify_alt_monitor()
