#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Ä–¥–µ—Ä–∞ –ø—Ä–æ–¥–∞–∂–∏ ETH
"""

from mex_api import MexAPI
from datetime import datetime

def check_eth_sell_order():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ä–¥–µ—Ä–∞ –ø—Ä–æ–¥–∞–∂–∏ ETH"""
    try:
        api = MexAPI()
        
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ä–¥–µ—Ä–∞ ETHUSDC...")
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ä–¥–µ—Ä–∞
        orders = api.get_order_history('ETHUSDC', limit=5)
        
        if not orders:
            print("‚ùå –ù–µ—Ç –æ—Ä–¥–µ—Ä–æ–≤ ETHUSDC")
            return
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(orders)} –æ—Ä–¥–µ—Ä–æ–≤:")
        print("=" * 80)
        
        for i, order in enumerate(orders):
            side = order.get('side', 'UNKNOWN')
            status = order.get('status', 'UNKNOWN')
            symbol = order.get('symbol', 'UNKNOWN')
            order_id = order.get('orderId', 'UNKNOWN')
            
            # –í—Ä–µ–º—è –æ—Ä–¥–µ—Ä–∞
            time_ms = order.get('time', 0)
            order_time = datetime.fromtimestamp(time_ms / 1000).strftime('%H:%M:%S')
            
            # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Ü–µ–Ω–∞
            orig_qty = float(order.get('origQty', 0))
            executed_qty = float(order.get('executedQty', 0))
            price = float(order.get('price', 0))
            
            # –°—É–º–º–∞
            cummulative_quote_qty = float(order.get('cummulativeQuoteQty', 0))
            
            print(f"{i+1}. {side} {symbol}")
            print(f"   ID: {order_id}")
            print(f"   –í—Ä–µ–º—è: {order_time}")
            print(f"   –°—Ç–∞—Ç—É—Å: {status}")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {orig_qty} ‚Üí {executed_qty}")
            print(f"   –¶–µ–Ω–∞: ${price:.2f}")
            print(f"   –°—É–º–º–∞: ${cummulative_quote_qty:.4f}")
            
            # –ï—Å–ª–∏ —ç—Ç–æ SELL –æ—Ä–¥–µ—Ä, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏
            if side == 'SELL':
                print(f"   üí∞ –ü–†–û–î–ê–ñ–ê ETH")
                if status == 'FILLED':
                    print(f"   ‚úÖ –ò–°–ü–û–õ–ù–ï–ù")
                    print(f"   üìä –ü–æ–ª—É—á–µ–Ω–æ: ${cummulative_quote_qty:.4f} USDC")
                else:
                    print(f"   ‚è≥ –°—Ç–∞—Ç—É—Å: {status}")
            
            print("-" * 40)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å USDC
        print("\nüí∞ –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å USDC...")
        account_info = api.get_account_info()
        usdc_balance = 0.0
        
        for balance in account_info.get('balances', []):
            if balance['asset'] == 'USDC':
                usdc_balance = float(balance['free'])
                break
        
        print(f"üíµ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å USDC: ${usdc_balance:.4f}")
        
        # –ê–Ω–∞–ª–∏–∑ –∫–æ–º–∏—Å—Å–∏–π
        print("\nüìä –ê–ù–ê–õ–ò–ó –ö–û–ú–ò–°–°–ò–ô:")
        print("=" * 40)
        
        if len(orders) >= 2:
            buy_order = None
            sell_order = None
            
            for order in orders:
                if order['side'] == 'BUY' and order['status'] == 'FILLED':
                    buy_order = order
                elif order['side'] == 'SELL' and order['status'] == 'FILLED':
                    sell_order = order
            
            if buy_order and sell_order:
                buy_amount = float(buy_order['cummulativeQuoteQty'])
                sell_amount = float(sell_order['cummulativeQuoteQty'])
                
                print(f"üí∏ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ –Ω–∞ –ø–æ–∫—É–ø–∫—É: ${buy_amount:.4f} USDC")
                print(f"üí∞ –ü–æ–ª—É—á–µ–Ω–æ –æ—Ç –ø—Ä–æ–¥–∞–∂–∏: ${sell_amount:.4f} USDC")
                
                total_cost = buy_amount
                total_revenue = sell_amount
                net_result = total_revenue - total_cost
                
                print(f"üìà –ß–∏—Å—Ç—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${net_result:.4f} USDC")
                
                if net_result > 0:
                    print(f"‚úÖ –ü–†–ò–ë–´–õ–¨: ${net_result:.4f} USDC")
                else:
                    print(f"üìâ –£–ë–´–¢–û–ö: ${abs(net_result):.4f} USDC")
                
                # –ö–æ–º–∏—Å—Å–∏–∏
                buy_commission = 5.0 - buy_amount  # –û–∂–∏–¥–∞–ª–∏ $5, –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ buy_amount
                sell_commission = sell_amount - (sell_amount * 0.999)  # –ü—Ä–∏–º–µ—Ä–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è –ø—Ä–æ–¥–∞–∂–∏
                
                print(f"üí∏ –ö–æ–º–∏—Å—Å–∏—è –ø–æ–∫—É–ø–∫–∏: ${buy_commission:.4f} USDC")
                print(f"üí∏ –ö–æ–º–∏—Å—Å–∏—è –ø—Ä–æ–¥–∞–∂–∏: ${sell_commission:.4f} USDC")
                print(f"üí∏ –û–±—â–∏–µ –∫–æ–º–∏—Å—Å–∏–∏: ${buy_commission + sell_commission:.4f} USDC")
                
                commission_percent = ((buy_commission + sell_commission) / 5.0) * 100
                print(f"üìä –ö–æ–º–∏—Å—Å–∏–∏ –≤ %: {commission_percent:.2f}%")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_eth_sell_order()
