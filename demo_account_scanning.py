#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
"""

import asyncio
import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from comprehensive_data_manager import ComprehensiveDataManager

class AccountScanningDemo:
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞"""
    
    def __init__(self):
        self.data_manager = None
        self.is_running = False
    
    async def start_demo(self):
        """–ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
        try:
            print("üé≠ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–Ø –ê–ö–ö–ê–£–ù–¢–ê")
            print("=" * 70)
            
            # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –¥–∞–Ω–Ω—ã—Ö
            print("1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö...")
            self.data_manager = ComprehensiveDataManager()
            print("   ‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ–∑–¥–∞–Ω")
            print()
            
            # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞
            print("2Ô∏è‚É£ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞...")
            await self._demo_account_scanning()
            print()
            
            # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è
            print("3Ô∏è‚É£ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–≤–æ–¥–∫–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è...")
            await self._demo_portfolio_summary()
            print()
            
            # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–æ–∫
            print("4Ô∏è‚É£ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–æ–∫...")
            await self._demo_subscription_update()
            print()
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É
            print("5Ô∏è‚É£ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...")
            await self._demo_full_system()
            print()
            
            print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
            import traceback
            traceback.print_exc()
    
    async def _demo_account_scanning(self):
        """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞"""
        try:
            print("   üîç –°–∫–∞–Ω–∏—Ä—É–µ–º –∞–∫–∫–∞—É–Ω—Ç...")
            symbols = self.data_manager._get_account_symbols()
            
            print(f"   üìä –ù–∞–π–¥–µ–Ω–æ —Å–∏–º–≤–æ–ª–æ–≤: {len(symbols)}")
            if symbols:
                print(f"   üí∞ –°–∏–º–≤–æ–ª—ã: {', '.join(symbols)}")
            else:
                print("   ‚ö†Ô∏è –°–∏–º–≤–æ–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∞–∑–æ–≤—ã–π —Å–ø–∏—Å–æ–∫")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    
    async def _demo_portfolio_summary(self):
        """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–≤–æ–¥–∫–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è"""
        try:
            print("   üìä –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–∫—É –ø–æ—Ä—Ç—Ñ–µ–ª—è...")
            portfolio = self.data_manager.get_portfolio_summary()
            
            if portfolio:
                print(f"   üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${portfolio.get('total_usdt', 0):.2f}")
                print(f"   üîç –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã: {', '.join(portfolio.get('active_symbols', []))}")
                
                if portfolio.get('asset_values'):
                    print("   üíé –°—Ç–æ–∏–º–æ—Å—Ç—å –∞–∫—Ç–∏–≤–æ–≤:")
                    for asset, value in portfolio['asset_values'].items():
                        if value > 0:
                            print(f"      {asset}: ${value:.2f}")
            else:
                print("   ‚ö†Ô∏è –°–≤–æ–¥–∫–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–æ–¥–∫–∏: {e}")
    
    async def _demo_subscription_update(self):
        """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–æ–∫"""
        try:
            print("   üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Å–∏–º–≤–æ–ª—ã...")
            await self.data_manager.refresh_account_subscriptions()
            
            if hasattr(self.data_manager, '_last_account_symbols'):
                current_symbols = self.data_manager._last_account_symbols
                print(f"   ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è {len(current_symbols)} —Å–∏–º–≤–æ–ª–æ–≤")
                if current_symbols:
                    print(f"   üì° –ü–æ–¥–ø–∏—Å–∫–∏: {', '.join(sorted(current_symbols))}")
            else:
                print("   ‚ö†Ô∏è –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–æ–∫: {e}")
    
    async def _demo_full_system(self):
        """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
        try:
            print("   üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É...")
            await self.data_manager.start()
            
            print("   ‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...")
            await asyncio.sleep(5)
            
            print("   üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã...")
            if hasattr(self.data_manager, '_last_account_symbols'):
                symbols = self.data_manager._last_account_symbols
                print(f"   ‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å {len(symbols)} —Å–∏–º–≤–æ–ª–∞–º–∏")
                if symbols:
                    print(f"   üîç –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã: {', '.join(sorted(symbols))}")
            
            print("   üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—É...")
            await self.data_manager.stop()
            print("   ‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ: {e}")
    
    def show_system_info(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ"""
        print("\nüìã –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï")
        print("=" * 50)
        print("üîç –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞:")
        print("   ‚Ä¢ –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ - —Å–∫–∞–Ω–∏—Ä—É–µ—Ç—Å—è –≤–µ—Å—å –∞–∫–∫–∞—É–Ω—Ç")
        print("   ‚Ä¢ –í–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã - –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏—è")
        print("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è WebSocket –ø–æ–¥–ø–∏—Å–∫–∏")
        print()
        print("üìä –ß—Ç–æ —Å–∫–∞–Ω–∏—Ä—É–µ—Ç—Å—è:")
        print("   ‚Ä¢ –°–ø–æ—Ç –±–∞–ª–∞–Ω—Å—ã (BTC, ETH, ADA, SOL –∏ —Ç.–¥.)")
        print("   ‚Ä¢ –§—å—é—á–µ—Ä—Å–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏")
        print("   ‚Ä¢ –û—Ç–∫—Ä—ã—Ç—ã–µ –æ—Ä–¥–µ—Ä–∞")
        print()
        print("üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:")
        print("   ‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã")
        print("   ‚Ä¢ –û—Ç–ø–∏—Å–∫–∞ –æ—Ç —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤")
        print("   ‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö")
        print("   ‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤")
        print()
        print("üí° –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:")
        print("   ‚Ä¢ –ù–µ –Ω—É–∂–Ω–æ –≤—Ä—É—á–Ω—É—é —É–∫–∞–∑—ã–≤–∞—Ç—å —Å–∏–º–≤–æ–ª—ã")
        print("   ‚Ä¢ –í—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        print("   ‚Ä¢ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤")
        print("   ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—Ä—Ç—Ñ–µ–ª—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–Ø –ê–ö–ö–ê–£–ù–¢–ê")
    print("=" * 70)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
    demo = AccountScanningDemo()
    demo.show_system_info()
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n‚ùì –•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é? (y/n): ", end="")
    choice = input().strip().lower()
    
    if choice in ['y', 'yes', '–¥–∞', '–¥']:
        print("\nüöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é...")
        await demo.start_demo()
    else:
        print("\nüëã –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    
    print("\n" + "=" * 70)
    print("üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
    print("   ‚Ä¢ README_ACCOUNT_SCANNING.md - –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ")
    print("   ‚Ä¢ test_account_scanning.py - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("   ‚Ä¢ comprehensive_data_manager.py - –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n\nüõë –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc() 