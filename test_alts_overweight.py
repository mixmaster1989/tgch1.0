#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏–∫–∏ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–µ—Å–µ –∞–ª—å—Ç–æ–≤
"""

import asyncio
from active_50_50_balancer import Active5050Balancer

async def test_alts_overweight_scenario():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π –∫–æ–≥–¥–∞ –∞–ª—å—Ç–æ–≤ –±–æ–ª—å—à–µ 50%"""
    print("üß™ –¢–ï–°–¢–ò–†–£–ï–ú –°–¶–ï–ù–ê–†–ò–ô –ü–ï–†–ï–í–ï–°–ê –ê–õ–¨–¢–û–í")
    print("=" * 50)
    
    balancer = Active5050Balancer()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø—Ä–∏ –ø–µ—Ä–µ–≤–µ—Å–µ –∞–ª—å—Ç–æ–≤
    print("\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –†–ê–ó–†–ï–®–ï–ù–ò–Ø –ù–ê –ü–û–ö–£–ü–ö–£ –ê–õ–¨–¢–û–í:")
    print("   (–ö–æ–≥–¥–∞ –∞–ª—å—Ç–æ–≤ —É–∂–µ –±–æ–ª—å—à–µ 50%)")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–µ—Ä–µ–≤–µ—Å –∞–ª—å—Ç–æ–≤ - –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ get_portfolio_values
    original_method = balancer.get_portfolio_values
    
    def mock_portfolio_alts_overweight():
        """–ú–æ–∫-–º–µ—Ç–æ–¥ —Å –ø–µ—Ä–µ–≤–µ—Å–æ–º –∞–ª—å—Ç–æ–≤"""
        return {
            'alts_value': 600.0,      # 60% –æ—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è
            'btceth_value': 400.0,    # 40% –æ—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è  
            'btceth_value_usdt': 400.0,
            'total_value': 1000.0,
            'usdc_usdt_rate': 1.0
        }
    
    # –ü–æ–¥–º–µ–Ω—è–µ–º –º–µ—Ç–æ–¥
    balancer.get_portfolio_values = mock_portfolio_alts_overweight
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –ø–æ–∫—É–ø–∫—É –∞–ª—å—Ç–æ–≤
    permission = balancer.check_purchase_permission(50.0, "ALTS")
    
    print(f"   üí∞ –°—É–º–º–∞ –ø–æ–∫—É–ø–∫–∏: $50.0")
    print(f"   üìä –ê–ª—å—Ç—ã: 60.0% (–ø–µ—Ä–µ–≤–µ—Å!)")
    print(f"   üìä BTC/ETH: 40.0%")
    print(f"   üö´ –†–∞–∑—Ä–µ—à–µ–Ω–æ: {permission['allowed']}")
    print(f"   üìù –ü—Ä–∏—á–∏–Ω–∞: {permission['reason']}")
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
    balancer.get_portfolio_values = original_method
    
    print("\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –õ–û–ì–ò–ö–ò –ë–ê–õ–ê–ù–°–ò–†–û–í–ö–ò:")
    print("   (–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –ø—Ä–∏ –ø–µ—Ä–µ–≤–µ—Å–µ –∞–ª—å—Ç–æ–≤)")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º calculate_balance_needed —Å –ø–µ—Ä–µ–≤–µ—Å–æ–º –∞–ª—å—Ç–æ–≤
    balancer.get_portfolio_values = mock_portfolio_alts_overweight
    
    # –ú–æ–∫–∞–µ–º USDC –±–∞–ª–∞–Ω—Å
    balancer.get_usdc_balance = lambda: 100.0
    
    balance_plan = balancer.calculate_balance_needed()
    
    if balance_plan:
        print(f"   ‚öñÔ∏è –î–µ–π—Å—Ç–≤–∏–µ: {balance_plan['action']}")
        print(f"   üí∞ –°—É–º–º–∞: ${balance_plan['amount']:.2f}")
        print(f"   üìù –ü—Ä–∏—á–∏–Ω–∞: {balance_plan['reason']}")
        
        if balance_plan['action'] == 'BUY_BTCETH_USDC':
            print("   ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ —Ö–æ—á–µ—Ç –∫—É–ø–∏—Ç—å BTC/ETH –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è")
        else:
            print("   ‚ùå –û–®–ò–ë–ö–ê: –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –¥–æ–ª–∂–µ–Ω –ø–æ–∫—É–ø–∞—Ç—å BTC/ETH, –∞ –Ω–µ –∞–ª—å—Ç—ã!")
    else:
        print("   ‚ö†Ô∏è –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –Ω–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ USDC)")
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    balancer.get_portfolio_values = original_method
    
    print("\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –õ–û–ì–ò–ö–ò –ü–†–ò –ù–û–†–ú–ê–õ–¨–ù–´–• –ü–†–û–ü–û–†–¶–ò–Ø–•:")
    print("   (–ö–æ–≥–¥–∞ –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã)")
    
    def mock_portfolio_balanced():
        """–ú–æ–∫-–º–µ—Ç–æ–¥ —Å–æ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ—Ä—Ç—Ñ–µ–ª–µ–º"""
        return {
            'alts_value': 500.0,      # 50% –æ—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è
            'btceth_value': 500.0,    # 50% –æ—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è
            'btceth_value_usdt': 500.0,
            'total_value': 1000.0,
            'usdc_usdt_rate': 1.0
        }
    
    balancer.get_portfolio_values = mock_portfolio_balanced
    
    permission = balancer.check_purchase_permission(50.0, "ALTS")
    
    print(f"   üí∞ –°—É–º–º–∞ –ø–æ–∫—É–ø–∫–∏: $50.0")
    print(f"   üìä –ê–ª—å—Ç—ã: 50.0% (—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–æ)")
    print(f"   üìä BTC/ETH: 50.0%")
    print(f"   ‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–æ: {permission['allowed']}")
    print(f"   üìù –ü—Ä–∏—á–∏–Ω–∞: {permission['reason']}")
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
    balancer.get_portfolio_values = original_method

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    await test_alts_overweight_scenario()
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("\nüìã –í–´–í–û–î–´:")
    print("   ‚Ä¢ –ü—Ä–∏ –ø–µ—Ä–µ–≤–µ—Å–µ –∞–ª—å—Ç–æ–≤ (>50%) - –ø–æ–∫—É–ø–∫–∞ –∞–ª—å—Ç–æ–≤ –ë–õ–û–ö–ò–†–£–ï–¢–°–Ø")
    print("   ‚Ä¢ –ü—Ä–∏ –ø–µ—Ä–µ–≤–µ—Å–µ –∞–ª—å—Ç–æ–≤ - –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤—â–∏–∫ –ø–æ–∫—É–ø–∞–µ—Ç BTC/ETH")
    print("   ‚Ä¢ –ü—Ä–∏ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ–ø–æ—Ä—Ü–∏—è—Ö - –ø–æ–∫—É–ø–∫–∞ –∞–ª—å—Ç–æ–≤ –†–ê–ó–†–ï–®–ê–ï–¢–°–Ø")

if __name__ == "__main__":
    asyncio.run(main())
