#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ñ—å—é—á–µ—Ä—Å–Ω–æ–≥–æ API
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from mex_api import MexAPI
import time

def simple_test():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç"""
    print("üîç –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ñ—å—é—á–µ—Ä—Å–Ω–æ–≥–æ API...")
    
    try:
        api = MexAPI()
        print("‚úÖ API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç —Å–ø–æ—Ç–æ–≤–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        print("\nüìä –¢–µ—Å—Ç —Å–ø–æ—Ç–æ–≤–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ (–¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è):")
        spot_info = api.get_account_info()
        print(f"–°–ø–æ—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–µ–Ω: {type(spot_info)}")
        if isinstance(spot_info, dict):
            print(f"–ö–ª—é—á–∏: {list(spot_info.keys())}")
        
        # –¢–µ—Å—Ç —Ñ—å—é—á–µ—Ä—Å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
        print("\nüìä –¢–µ—Å—Ç —Ñ—å—é—á–µ—Ä—Å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞:")
        print("–ü–æ–ø—ã—Ç–∫–∞ 1: get_futures_account_info()")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–∞–π–º–∞—É—Ç–∞
        import signal
        
        def timeout_handler(signum, frame):
            raise TimeoutError("–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞")
        
        signal.signal(signal.SIGALRM, timeout_handler)
        signal.alarm(10)  # 10 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
        
        try:
            futures_info = api.get_futures_account_info()
            signal.alarm(0)  # –û—Ç–∫–ª—é—á–∞–µ–º —Ç–∞–π–º–∞—É—Ç
            print(f"‚úÖ –§—å—é—á–µ—Ä—Å–Ω—ã–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–µ–Ω: {type(futures_info)}")
            if isinstance(futures_info, dict):
                print(f"–ö–ª—é—á–∏: {list(futures_info.keys())}")
                if 'error' in futures_info:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {futures_info['error']}")
                else:
                    print(f"‚úÖ –£—Å–ø–µ—Ö: {futures_info}")
        except TimeoutError:
            print("‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ (10 —Å–µ–∫)")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        finally:
            signal.alarm(0)  # –û—Ç–∫–ª—é—á–∞–µ–º —Ç–∞–π–º–∞—É—Ç
            
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    simple_test()
