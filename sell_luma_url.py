#!/usr/bin/env python3
"""
–ü–†–û–î–ê–ï–ú LUMA –° –ü–ê–†–ê–ú–ï–¢–†–ê–ú–ò –í URL!
–ö–∞–∫ —Ç—Ä–µ–±—É–µ—Ç MEXC API
"""

import json
import time
import hmac
import hashlib
import urllib.parse
from urllib.request import Request, urlopen

print("üö® –ü–†–û–î–ê–ï–ú LUMA –° –ü–ê–†–ê–ú–ï–¢–†–ê–ú–ò –í URL!")
print("=" * 50)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–ª—é—á–∏ –∏–∑ .env
env_vars = {}
try:
    with open('.env', 'r') as f:
        for line in f:
            line = line.strip()
            if line and not line.startswith('#') and '=' in line:
                key, value = line.split('=', 1)
                env_vars[key] = value
except:
    pass

API_KEY = env_vars.get('MEX_API_KEY', '')
SECRET_KEY = env_vars.get('MEX_SECRET_KEY', '')

if not API_KEY or not SECRET_KEY:
    print("‚ùå API –∫–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
    exit()

print("‚úÖ API –∫–ª—é—á–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")

# 1. –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å LUMA
print("üîç –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å LUMA...")
timestamp = int(time.time() * 1000)
params = {
    'timestamp': timestamp,
    'recvWindow': 5000
}

query_string = urllib.parse.urlencode(params)
signature = hmac.new(
    SECRET_KEY.encode('utf-8'),
    query_string.encode('utf-8'),
    hashlib.sha256
).hexdigest()

params['signature'] = signature
url = "https://api.mexc.com/api/v3/account?" + urllib.parse.urlencode(params)
headers = {'X-MEXC-APIKEY': API_KEY}

try:
    req = Request(url, headers=headers)
    with urlopen(req) as response:
        result = json.loads(response.read().decode())
        
        luma_balance = 0
        for balance in result.get('balances', []):
            if balance['asset'] == 'LUMA':
                luma_balance = float(balance['free'])
                break
        
        if luma_balance <= 0:
            print("‚ùå LUMA –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–ª–∞–Ω—Å–µ")
            exit()
        
        print(f"üí∞ –ù–∞–π–¥–µ–Ω LUMA: {luma_balance}")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞: {e}")
    exit()

# 2. –ü—Ä–æ–¥–∞–µ–º LUMA
print(f"üî• –ü—Ä–æ–¥–∞–µ–º {luma_balance} LUMA...")

# –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ 2 –∑–Ω–∞–∫–æ–≤
quantity = round(luma_balance, 2)
print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏: {quantity}")

# –°–æ–∑–¥–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ä–¥–µ—Ä–∞
order_params = {
    'symbol': 'LUMAUSDT',
    'side': 'SELL',
    'type': 'MARKET',
    'quantity': str(quantity),
    'timestamp': int(time.time() * 1000),
    'recvWindow': 5000
}

# –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å—å –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
query_string = urllib.parse.urlencode(order_params)
signature = hmac.new(
    SECRET_KEY.encode('utf-8'),
    query_string.encode('utf-8'),
    hashlib.sha256
).hexdigest()

# –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å
order_params['signature'] = signature

# –°–æ–∑–¥–∞–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
url = "https://api.mexc.com/api/v3/order?" + urllib.parse.urlencode(order_params)
headers = {
    'X-MEXC-APIKEY': API_KEY,
    'Content-Type': 'application/x-www-form-urlencoded'
}

print(f"üîó URL: {url}")
print(f"üìù –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {json.dumps(order_params, indent=2)}")

try:
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å —Å –ø—É—Å—Ç—ã–º body
    req = Request(url, data=b'', headers=headers, method='POST')
    
    with urlopen(req) as response:
        result = json.loads(response.read().decode())
        
        if 'orderId' in result:
            print(f"‚úÖ LUMA –ü–†–û–î–ê–ù –£–°–ü–ï–®–ù–û!")
            print(f"üÜî –û—Ä–¥–µ—Ä: {result['orderId']}")
            print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity}")
            print(f"üí∞ –°–∏–º–≤–æ–ª: LUMAUSDT")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–¥–∞–∂–∏: {result}")
            
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ä–¥–µ—Ä–∞: {e}")
    if hasattr(e, 'read'):
        try:
            error_body = e.read().decode()
            print(f"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {error_body}")
        except:
            pass

print("\nüèÅ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω") 