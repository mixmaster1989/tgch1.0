#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Order Book
"""

import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from comprehensive_data_manager import ComprehensiveDataManager

async def test_orderbook_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Order Book"""
    print("üß™ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò ORDER BOOK")
    print("=" * 50)
    
    manager = ComprehensiveDataManager()
    
    # –°—á–µ—Ç—á–∏–∫–∏
    orderbook_updates = 0
    trade_updates = 0
    
    # Callbacks
    async def orderbook_callback(data):
        nonlocal orderbook_updates
        orderbook_updates += 1
        print(f"üìä Order Book #{orderbook_updates}: {data.symbol}")
        print(f"   –°–ø—Ä–µ–¥: ${data.spread:.4f} ({data.spread_percent:.4f}%)")
        print(f"   –õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å: {data.liquidity_score:.2f}")
        print(f"   Top bid: ${data.bids[0][0]:.6f} ({data.bids[0][1]:.4f})")
        print(f"   Top ask: ${data.asks[0][0]:.6f} ({data.asks[0][1]:.4f})")
    
    async def trade_callback(data):
        nonlocal trade_updates
        trade_updates += 1
        print(f"üí± Trade #{trade_updates}: {data.symbol} {data.side}")
        print(f"   –¶–µ–Ω–∞: ${data.price:.6f}, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {data.quantity:.4f}")
    
    # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è
    manager.subscribe_orderbook_updates(orderbook_callback)
    manager.subscribe_trade_updates(trade_callback)
    
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞...")
        await manager.start()
        
        print("üì° –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–∏–º–≤–æ–ª—ã...")
        await manager.subscribe_multiple_symbols(['BTCUSDT', 'ETHUSDT'])
        
        print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (30 —Å–µ–∫—É–Ω–¥)...")
        await asyncio.sleep(30)
        
        print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
        print(f"  Order Book –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {orderbook_updates}")
        print(f"  Trade –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {trade_updates}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
        btc_orderbook = manager.get_orderbook_data('BTCUSDT')
        if btc_orderbook:
            print(f"‚úÖ BTC Order Book –Ω–∞–π–¥–µ–Ω:")
            print(f"   –°–ø—Ä–µ–¥: {btc_orderbook.spread_percent:.4f}%")
            print(f"   –õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å: {btc_orderbook.liquidity_score:.2f}")
        else:
            print("‚ùå BTC Order Book –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        eth_orderbook = manager.get_orderbook_data('ETHUSDT')
        if eth_orderbook:
            print(f"‚úÖ ETH Order Book –Ω–∞–π–¥–µ–Ω:")
            print(f"   –°–ø—Ä–µ–¥: {eth_orderbook.spread_percent:.4f}%")
            print(f"   –õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å: {eth_orderbook.liquidity_score:.2f}")
        else:
            print("‚ùå ETH Order Book –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False
        
    finally:
        await manager.stop()

if __name__ == "__main__":
    asyncio.run(test_orderbook_integration()) 