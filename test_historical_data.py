#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π
"""

import asyncio
from comprehensive_data_manager import ComprehensiveDataManager
from advanced_correlation_analyzer import advanced_correlation_analyzer

async def test_historical_data():
    """–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("üöÄ –¢–ï–°–¢ –ó–ê–ì–†–£–ó–ö–ò –ò–°–¢–û–†–ò–ß–ï–°–ö–ò–• –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    data_manager = ComprehensiveDataManager()
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
        print("üìö –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö...")
        await data_manager._load_historical_data_for_correlations()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ó–ê–ì–†–£–ó–ö–ò:")
        print("-" * 30)
        
        if hasattr(advanced_correlation_analyzer, 'price_data'):
            total_points = sum(len(prices) for prices in advanced_correlation_analyzer.price_data.values())
            print(f"–í—Å–µ–≥–æ —Ç–æ—á–µ–∫ –¥–∞–Ω–Ω—ã—Ö: {total_points}")
            
            for asset, prices in advanced_correlation_analyzer.price_data.items():
                print(f"  {asset}: {len(prices)} —Ç–æ—á–µ–∫")
                if len(prices) > 0:
                    latest = prices[-1]
                    oldest = prices[0]
                    print(f"    –ü–æ—Å–ª–µ–¥–Ω—è—è: ${latest['price']:.4f} (–≤—Ä–µ–º—è: {latest['timestamp']})")
                    print(f"    –ü–µ—Ä–≤–∞—è: ${oldest['price']:.4f} (–≤—Ä–µ–º—è: {oldest['timestamp']})")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏
        print("\nüîó –¢–ï–°–¢ –ö–û–†–†–ï–õ–Ø–¶–ò–ô:")
        print("-" * 30)
        
        correlation_data = data_manager.get_correlation_data('ETHUSDT')
        if correlation_data and 'basic_correlations' in correlation_data:
            correlations = correlation_data['basic_correlations']
            for asset, corr_info in correlations.items():
                if isinstance(corr_info, dict) and 'correlation' in corr_info:
                    corr_value = corr_info['correlation']
                    strength = corr_info.get('strength', 'unknown')
                    print(f"  {asset}: {corr_value:.4f} ({strength})")
                    
                    if corr_value != 0.0:
                        print(f"    ‚úÖ –†–ï–ê–õ–¨–ù–´–ï –ö–û–†–†–ï–õ–Ø–¶–ò–ò –†–ê–ë–û–¢–ê–Æ–¢!")
                    else:
                        print(f"    ‚ö†Ô∏è –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è = 0.0000")
        else:
            print("‚ùå –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        print("\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_historical_data())
